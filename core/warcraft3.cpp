#include "warcraft3.hpp"

WARCRAFT3::WARCRAFT3() : 
	GAME()
{
	GAME::MAX_GAME_TYPES += 1;
}

void WARCRAFT3::init()
{
        GAME::MAX_RACES = 4;
        GAME::MAX_TOTAL_UNITS = 600;
        GAME::MAX_SUPPLY = 90; //?
        unsigned int max_unit_type_count = UNIT_TYPE_COUNT_HUMAN;
        if(UNIT_TYPE_COUNT_ORC > max_unit_type_count)
                max_unit_type_count = UNIT_TYPE_COUNT_ORC;
        if(UNIT_TYPE_COUNT_ELVES > max_unit_type_count)
                max_unit_type_count = UNIT_TYPE_COUNT_ELVES;
        if(UNIT_TYPE_COUNT_UNDEAD > max_unit_type_count)
                max_unit_type_count = UNIT_TYPE_COUNT_UNDEAD;

        GAME::MAX_GAME_STRINGS = MAX_WARCRAFT3_STRINGS;
        GAME::MAX_RESOURCES = 50000000;

        RACE::UNIT_TYPE_COUNT = max_unit_type_count;
        RACE::MAX_RESOURCE_TYPES = 2;

        RESOURCE::MAX_RESOURCE_WORKERS = 64;
        RESOURCE::MAX_RESOURCE_PROVIDER_PER_LOCATION = 32;
        RESOURCE::MAX_RESOURCE_DISTANCE = 10;

        GAME::race.resize(MAX_RACES);
        GAME::race[HUMAN].raceString = "Human";
        GAME::race[ORC].raceString = "Orc";
        GAME::race[ELVES].raceString = "Elves";
        GAME::race[UNDEAD].raceString = "Undead";

        GAME::gameDirectory = "warcraft3";

        GAME::gameSpeedFrames.resize(GAME_SPEED_FASTEST+1);
        GAME::gameSpeedFrames[GAME_SPEED_SLOWEST] = 6;
        GAME::gameSpeedFrames[GAME_SPEED_SLOWER] = 9;
        GAME::gameSpeedFrames[GAME_SPEED_SLOW] = 12;
        GAME::gameSpeedFrames[GAME_SPEED_NORMAL] = 15;
        GAME::gameSpeedFrames[GAME_SPEED_FAST] = 18;
        GAME::gameSpeedFrames[GAME_SPEED_FASTER] = 21;
        GAME::gameSpeedFrames[GAME_SPEED_FASTEST] = 24; // ?

	for(unsigned int i = GAME::MAX_RACES; i--;)
	{
		GAME::race[i].resource.resize(RACE::MAX_RESOURCE_TYPES);
		GAME::race[i].stats.resize(RACE::UNIT_TYPE_COUNT);
	}


        GAME::race[HUMAN].resource[GOLD].provider = GOLD_MINE;
        GAME::race[HUMAN].resource[WOOD].provider = TREE;
        GAME::race[HUMAN].resource[GOLD].gatherer = PEASANT;
        GAME::race[HUMAN].resource[WOOD].gatherer = WOOD_PEASANT;
	GAME::race[HUMAN].resource[GOLD].accepter.push_back(TOWN_HALL);
        GAME::race[HUMAN].resource[GOLD].accepter.push_back(KEEP);
        GAME::race[HUMAN].resource[GOLD].accepter.push_back(CASTLE);
        GAME::race[HUMAN].resource[WOOD].accepter.push_back(TOWN_HALL);
        GAME::race[HUMAN].resource[WOOD].accepter.push_back(KEEP);
        GAME::race[HUMAN].resource[WOOD].accepter.push_back(CASTLE);
        GAME::race[HUMAN].resource[WOOD].accepter.push_back(LUMBER_MILL);

        GAME::race[ORC].resource[GOLD].provider = GOLD_MINE;
        GAME::race[ORC].resource[WOOD].provider = TREE;
        GAME::race[ORC].resource[GOLD].gatherer = PEON;
        GAME::race[ORC].resource[WOOD].gatherer = WOOD_PEON;
        GAME::race[ORC].resource[GOLD].accepter.push_back(GREAT_HALL);
        GAME::race[ORC].resource[GOLD].accepter.push_back(STRONGHOLD);
        GAME::race[ORC].resource[GOLD].accepter.push_back(FORTRESS);
        GAME::race[ORC].resource[WOOD].accepter.push_back(GREAT_HALL);
        GAME::race[ORC].resource[WOOD].accepter.push_back(STRONGHOLD);
        GAME::race[ORC].resource[WOOD].accepter.push_back(FORTRESS);
        GAME::race[ORC].resource[WOOD].accepter.push_back(WAR_MILL);

        GAME::race[ELVES].resource[GOLD].provider = GOLD_MINE;
	// entangled?
        GAME::race[ELVES].resource[WOOD].provider = TREE;
        GAME::race[ELVES].resource[GOLD].gatherer = WISP;
        GAME::race[ELVES].resource[WOOD].gatherer = WOOD_WISP;
	// accepter empty => all resources can be gathered without accepter.

	GAME::race[UNDEAD].resource[GOLD].provider = HAUNTED_GOLD_MINE;
        GAME::race[UNDEAD].resource[WOOD].provider = TREE;
        GAME::race[UNDEAD].resource[GOLD].gatherer = ACOLYTE;
        GAME::race[UNDEAD].resource[WOOD].gatherer = GHOUL;
	// gold accepter empty => resource can be gathered without extra town hall (just the haunted gold mine)
        GAME::race[UNDEAD].resource[WOOD].accepter.push_back(NECROPOLIS);
        GAME::race[UNDEAD].resource[WOOD].accepter.push_back(HALLS_OF_THE_DEAD);
        GAME::race[UNDEAD].resource[WOOD].accepter.push_back(BLACK_CITADEL);
        GAME::race[UNDEAD].resource[WOOD].accepter.push_back(CRYPT); // ?

        GAME::race[HUMAN].resource[GOLD].gatherAmount = 800;
        GAME::race[HUMAN].resource[GOLD].harvestTime = 75;
        GAME::race[HUMAN].resource[WOOD].gatherAmount = 800;
        GAME::race[HUMAN].resource[WOOD].harvestTime = 75;

        GAME::race[ORC].resource[GOLD].gatherAmount = 800;
        GAME::race[ORC].resource[GOLD].harvestTime = 75;
        GAME::race[ORC].resource[WOOD].gatherAmount = 800;
        GAME::race[ORC].resource[WOOD].harvestTime = 75;

        GAME::race[ELVES].resource[GOLD].gatherAmount = 800;
        GAME::race[ELVES].resource[GOLD].harvestTime = 75;
        GAME::race[ELVES].resource[WOOD].gatherAmount = 800;
        GAME::race[ELVES].resource[WOOD].harvestTime = 75;

	GAME::race[UNDEAD].resource[GOLD].gatherAmount = 800;
        GAME::race[UNDEAD].resource[GOLD].harvestTime = 75;
        GAME::race[UNDEAD].resource[WOOD].gatherAmount = 800;
        GAME::race[UNDEAD].resource[WOOD].harvestTime = 75; //~~

        GAME::race[HUMAN].supply.push_back(FARM);
        GAME::race[ORC].supply.push_back(BURROW);
        GAME::race[ELVES].supply.push_back(MOON_WELL);
        GAME::race[UNDEAD].supply.push_back(ZIGGURAT);

        GAME::CANCELING_BUILDING_RETURN = 75; // in %

        GAME::race[HUMAN].hotkey = 'h';
        GAME::race[ORC].hotkey = 'o';
        GAME::race[ELVES].hotkey = 'e';
        GAME::race[UNDEAD].hotkey = 'u';

//      Eigentlich je nach Arbeiter?

        race[HUMAN].setResearchParameters(R_DEFEND, R_MAGIC_SENTINEL, DEFEND);
        race[ORC].setResearchParameters(R_PILLAGE, R_SPIRIT_WALKER_TRAINING, PILLAGE);
        race[ELVES].setResearchParameters(R_IMPROVED_BOWS, R_DRUID_OF_THE_THALON_TRAINING, IMPROVED_BOWS);
        race[UNDEAD].setResearchParameters(R_CANNIBALIZE, R_BANSHEE_TRAINING, CANNIBALIZE);

        

//                                                      time   min gas ns hs   prereq  facility fac2    facility_type         create  unit_type
//							hp>  time mins gas ns +hs -spec xp> -unsummon -upres -worth -spec prere facility  +facility2 + facility3 +fac2 +create +unit_type

race[HUMAN].stats[NONE] = 		UNIT_STATISTICS(  0,    0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE);
race[HUMAN].stats[GOLD_MINE] = 		UNIT_STATISTICS(  0,    0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE);
race[HUMAN].stats[TREE] = 		UNIT_STATISTICS(  0,    0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE);
race[HUMAN].stats[PEASANT] = 		UNIT_STATISTICS( 15*15,   7500,  0,  1, 0, 0, 0, 0, TOWN_HALL, KEEP, CASTLE, 0, NEEDED_UNTIL_COMPLETE, 0, WORKER_UNIT_TYPE, 220, 25, AFFECTS_GOLD);
race[HUMAN].stats[WOOD_PEASANT] = 	UNIT_STATISTICS( 3*15,   0,  0,  0, 0, 0, 0, 0, PEASANT, 0, 0, 0, IS_MORPHING, 0, GAS_MINER_UNIT_TYPE, 220, 25, AFFECTS_GOLD_AND_WOOD);
race[HUMAN].stats[PEASANT_FROM_WOOD_TO_GOLD] = 	UNIT_STATISTICS( 3*15, 0,  0,  1, 0, 0, 0, 0, WOOD_PEASANT, 0, 0, 0, IS_MORPHING, PEASANT, ORDER_UNIT_TYPE, 0, 0, AFFECTS_GOLD_AND_WOOD);

// ? evtl neues facilitytype dazufuegen... needed until complete + lost at the end + availible immediately
race[HUMAN].stats[MILITIA] = 		UNIT_STATISTICS( 60*15,  0,   0, 0,0, 0, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 0, 220, 37);
race[HUMAN].stats[FOOTMAN] = 		UNIT_STATISTICS( 20*15, 13500,  0, 2,0, 0, 0, 0, HUMAN_BARRACKS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 0, 420, 37);
race[HUMAN].stats[RIFLEMAN] = 		UNIT_STATISTICS( 26*15, 20500, 3000, 3,0,BLACKSMITH, 0, 0, HUMAN_BARRACKS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 520, 50);
race[HUMAN].stats[KNIGHT] = 		UNIT_STATISTICS( 45*15, 24500, 6000,4,0, BLACKSMITH, CASTLE, 0, HUMAN_BARRACKS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 800, 75);
race[HUMAN].stats[PRIEST] = 		UNIT_STATISTICS( 28*15, 13500, 1000,2,0, 0, 0, 0, ARCANE_SANCTUM, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 220, 37);
race[HUMAN].stats[SORCERESS] = 		UNIT_STATISTICS( 30*15, 15500, 2000,2,0, 0, 0, 0, ARCANE_SANCTUM, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 250, 37);
race[HUMAN].stats[SPELL_BREAKER] = 	UNIT_STATISTICS( 28*15, 21500, 3000,3,0, ARCANE_VAULT, 0, 0, ARCANE_SANCTUM, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE,  250, 37);
		//? 155/20/2 ? CASTLE? 37?
race[HUMAN].stats[GYROCEPTOR] = 	UNIT_STATISTICS( 25*15,  9000, 3000,1,0, 0, 0, 0, WORKSHOP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 350, 37);
race[HUMAN].stats[MORTAR_TEAM] = 	UNIT_STATISTICS( 40*15, 18000, 7000,3,0, 0, 0, 0, WORKSHOP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 360, 50);
race[HUMAN].stats[STEAM_TANK] = 	UNIT_STATISTICS( 55*15, 19500, 6000,3,0, CASTLE, 0, 0, WORKSHOP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 700, 50);
race[HUMAN].stats[GRYPHON_RIDER] = 	UNIT_STATISTICS( 45*15, 28000, 7000,4,0, 0, 0, 0, GRYPHON_AVIARY, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 750,100);
race[HUMAN].stats[DRAGONHAWK_RIDER] = 	UNIT_STATISTICS( 45*15, 23500, 4000,3,0, ARCANE_VAULT, 0, 0, GRYPHON_AVIARY, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE,  750,100);
race[HUMAN].stats[WATER_ELEMENTAL_LVL1]=UNIT_STATISTICS(  0*15,   000,  000,0,0, ARCHMAGE, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 450, 50);
race[HUMAN].stats[WATER_ELEMENTAL_LVL2]=UNIT_STATISTICS(  0*15,   000,  000,0,0, ARCHMAGE, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 675, 75);
race[HUMAN].stats[WATER_ELEMENTAL_LVL3]=UNIT_STATISTICS(  0*15,   000,  000,0,0, ARCHMAGE, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 900,100);
race[HUMAN].stats[PHOENIX] = 		UNIT_STATISTICS(  0*15,   000,  000,0,0, BLOOD_MAGE, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE,  500,100);
race[HUMAN].stats[PALADIN] = 		UNIT_STATISTICS( 55*15,   000,  000,5,0, 0, 0, 0, ALTAR_OF_KINGS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[HUMAN].stats[ARCHMAGE] = 		UNIT_STATISTICS( 55*15,   000,  000,5,0, 0, 0, 0, ALTAR_OF_KINGS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[HUMAN].stats[MOUNTAIN_KING] =	UNIT_STATISTICS( 55*15,   000,  000,5,0, 0, 0, 0, ALTAR_OF_KINGS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[HUMAN].stats[BLOOD_MAGE] = 	UNIT_STATISTICS( 55*15,   000,  000,5,0, 0, 0, 0, ALTAR_OF_KINGS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[HUMAN].stats[FARM] = 		UNIT_STATISTICS( 35*15,  8000, 2000,0,6, 0, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPLY_UNIT_TYPE, 500,  0);
race[HUMAN].stats[TOWN_HALL] = 		UNIT_STATISTICS(180*15, 38500,18500,0,12,0, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPLY_UNIT_TYPE,1500,  0);
race[HUMAN].stats[KEEP] = 		UNIT_STATISTICS(120*15, 32000,21000,0,0, 0, 0, 0, TOWN_HALL, 0, 0, 0, IS_MORPHING, 0, ADD_ON_UNIT_TYPE,2000,  0);
race[HUMAN].stats[CASTLE] = 		UNIT_STATISTICS(120*15, 38000,23000,0,0, ALTAR_OF_KINGS, 0, 0, KEEP, 0, 0, 0, IS_MORPHING, 0, ADD_ON_UNIT_TYPE,2500,  0);
race[HUMAN].stats[HUMAN_BARRACKS] =	UNIT_STATISTICS( 60*15, 16000, 6000,0,0, 0, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1500,  0);
race[HUMAN].stats[ALTAR_OF_KINGS] = 	UNIT_STATISTICS( 60*15, 18000, 5000,0,0, 0, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE, 900,  0);
race[HUMAN].stats[LUMBER_MILL] = 	UNIT_STATISTICS( 60*15, 14500,  0,0,0, 0, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, RESEARCH_FACILITY_UNIT_TYPE, 900,  0);
race[HUMAN].stats[SCOUT_TOWER] = 	UNIT_STATISTICS( 25*15,  3000, 2000,0,0, 0, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[HUMAN].stats[BLACKSMITH] = 	UNIT_STATISTICS( 70*15, 14000, 6000,0,0, 0, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, RESEARCH_FACILITY_UNIT_TYPE,1200,  0);
race[HUMAN].stats[WORKSHOP] = 		UNIT_STATISTICS( 70*15, 14000,14000,0,0, BLACKSMITH, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1200,  0);
race[HUMAN].stats[ARCANE_SANCTUM] = 	UNIT_STATISTICS( 80*15, 15000,14000,0,0, 0, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1050,  0);
race[HUMAN].stats[GRYPHON_AVIARY] = 	UNIT_STATISTICS( 75*15, 12000,24000,0,0, CASTLE, LUMBER_MILL, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1200,  0);
race[HUMAN].stats[ARCANE_VAULT] = 	UNIT_STATISTICS( 75*15, 13000, 3000,0,0, 0, 0, 0, PEASANT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, RESEARCH_FACILITY_UNIT_TYPE, 500,  0);
race[HUMAN].stats[GUARD_TOWER] = 	UNIT_STATISTICS( 70*15,  8000, 6000,0,0, LUMBER_MILL, 0, 0, SCOUT_TOWER, 0, 0, 0, IS_LOST, 0, ADD_ON_UNIT_TYPE, 500, 25);
race[HUMAN].stats[CANNON_TOWER] = 	UNIT_STATISTICS( 80*15, 17000,10000,0,0, WORKSHOP, 0, 0, SCOUT_TOWER, 0, 0, 0, IS_LOST, 0, ADD_ON_UNIT_TYPE, 600, 25);
race[HUMAN].stats[ARCANE_TOWER] = 	UNIT_STATISTICS( 70*15,  8000, 6000,0,0, ARCANE_VAULT, 0, 0, SCOUT_TOWER, 0, 0, 0, IS_LOST, 0, ADD_ON_UNIT_TYPE, 500, 25);
race[HUMAN].stats[HUMAN_BACKPACK] = 	UNIT_STATISTICS( 20*15,  5000, 2500,0,0, ARCANE_VAULT, 0, 0, 0, 0, 0, R_HUMAN_BACKPACK, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[DEFEND] = 		UNIT_STATISTICS( 45*15, 15000,10000,0,0, 0, 0, 0, HUMAN_BARRACKS, 0, 0, R_DEFEND, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[LONG_RIFLES] = 	UNIT_STATISTICS( 30*15,  7500,12500,0,0, WORKSHOP, 0, 0, HUMAN_BARRACKS, 0, 0, R_LONG_RIFLES, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[ANIMAL_WAR_TRAINING] =UNIT_STATISTICS( 40*15, 15000,25000,0,0, CASTLE, LUMBER_MILL, BLACKSMITH, HUMAN_BARRACKS, 0, 0, R_ANIMAL_WAR_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[GYROCEPTOR_BOMBS] = 	UNIT_STATISTICS( 35*15, 15000,10000,0,0, CASTLE, 0, 0, WORKSHOP, 0, 0, R_GYROCEPTOR_BOMBS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[WAR_ENGINE] = 	UNIT_STATISTICS( 40*15,  5000,15000,0,0, CASTLE, 0, 0, WORKSHOP, 0, 0, R_WAR_ENGINE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[FLARE] = 		UNIT_STATISTICS( 30*15,  5000, 5000,0,0, 0, 0, 0, WORKSHOP, 0, 0, R_FLARE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[FRAGMENTATION_SHARDS]=UNIT_STATISTICS( 40*15,  5000,10000,0,0, CASTLE, 0, 0, WORKSHOP, 0, 0, R_FRAGMENTATION_SHARDS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[STORM_HAMMERS] = 	UNIT_STATISTICS( 45*15, 12500,22500,0,0, 0, 0, 0, GRYPHON_AVIARY, 0, 0, R_STORM_HAMMERS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[LUMBER_HARVESTING] = 	UNIT_STATISTICS( 60*15, 10000,  0,0,0, 0, 0, 0, LUMBER_MILL, 0, 0, R_LUMBER_HARVESTING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[MASONRY] = 		UNIT_STATISTICS( 60*15, 10000,10000,0,0, 0, 0, 0, LUMBER_MILL, 0, 0, R_MASONRY, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[MELEE_WEAPONS] = 	UNIT_STATISTICS( 60*15, 10000, 5000,0,0, 0, 0, 0, BLACKSMITH, 0, 0, R_MELEE_WEAPONS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[MELEE_PLATING] = 	UNIT_STATISTICS( 60*15, 12500, 7500,0,0, 0, 0, 0, BLACKSMITH, 0, 0, R_MELEE_PLATING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[RANGED_WEAPONS] = 	UNIT_STATISTICS( 60*15, 10000, 5000,0,0, 0, 0, 0, BLACKSMITH, 0, 0, R_RANGED_WEAPONS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[LEATHER_ARMOR] = 	UNIT_STATISTICS( 60*15, 10000,10000,0,0, 0, 0, 0, BLACKSMITH, 0, 0, R_LEATHER_ARMOR, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[PRIEST_TRAINING] = 	UNIT_STATISTICS( 60*15, 10000,  0,0,0, 0, 0, 0, ARCANE_SANCTUM, 0, 0, R_PRIEST_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[SORCERESS_TRAINING] = UNIT_STATISTICS( 60*15, 10000,  0,0,0, 0, 0, 0, ARCANE_SANCTUM, 0, 0, R_SORCERESS_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[CONTROL_MAGIC] = 	UNIT_STATISTICS( 45*15,  7500, 7500,0,0, ARCANE_VAULT, 0, 0, ARCANE_SANCTUM, 0, 0, R_CONTROL_MAGIC, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[HUMAN].stats[MAGIC_SENTINEL] = 	UNIT_STATISTICS( 30*15,  5000, 5000,0,0, 0, 0, 0, ARCANE_SANCTUM, 0, 0, R_MAGIC_SENTINEL, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);

race[HUMAN].stats[R_HUMAN_BACKPACK] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_DEFEND] = 		UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_LONG_RIFLES] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_ANIMAL_WAR_TRAINING]=UNIT_STATISTICS( 0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_GYROCEPTOR_BOMBS] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_WAR_ENGINE] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_FLARE] = 		UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_FRAGMENTATION_SHARDS]=UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_STORM_HAMMERS] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_LUMBER_HARVESTING] =UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_MASONRY] = 		UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_MELEE_WEAPONS] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_MELEE_PLATING] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_RANGED_WEAPONS] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_LEATHER_ARMOR] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_PRIEST_TRAINING] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_SORCERESS_TRAINING]=UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_CONTROL_MAGIC] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[HUMAN].stats[R_MAGIC_SENTINEL] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);



race[ORC].stats[PEON] = 		UNIT_STATISTICS( 15*15,  7500,  0,1,0, 0, 0, 0, 0, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, WORKER_UNIT_TYPE, 250, 25, AFFECTS_GOLD);
race[ORC].stats[WOOD_PEON] = 		UNIT_STATISTICS( 3, 0,  0,0,0, 0, 0, 0, PEON, 0, 0, 0, IS_MORPHING, 0, GAS_MINER_UNIT_TYPE, 250, 25, AFFECTS_WOOD);
race[ORC].stats[PEON_FROM_WOOD_TO_GOLD]=UNIT_STATISTICS( 3, 0,  0,0,0, 0, 0, 0, WOOD_PEON, 0, 0, 0, IS_MORPHING, PEON, ORDER_UNIT_TYPE, 0, 0, AFFECTS_GOLD_AND_WOOD);
race[ORC].stats[GRUNT] = 		UNIT_STATISTICS( 30*15, 20000,  0,3,0, 0, 0, 0, ORC_BARRACKS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 680, 50);
race[ORC].stats[HEADHUNTER] = 		UNIT_STATISTICS( 22*15, 13500, 2000,2,0, WAR_MILL, 0, 0, ORC_BARRACKS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 280, 37);
race[ORC].stats[CATAPULT] = 		UNIT_STATISTICS( 45*15, 22000, 5000,4,0, WAR_MILL, 0, 0, ORC_BARRACKS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 425, 75);
race[ORC].stats[RAIDER] = 		UNIT_STATISTICS( 28*15, 18000, 4000,3,0, 0, 0, 0, BESTIARY, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 610, 50);
race[ORC].stats[TAUREN] = 		UNIT_STATISTICS( 50*15, 28000, 8000,5,0, 0, 0, 0, TAUREN_TOTEM, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE,1300,100);
race[ORC].stats[SHAMAN] = 		UNIT_STATISTICS( 30*15, 13000, 2000,2,0, 0, 0, 0, SPIRIT_LODGE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 260, 37);
race[ORC].stats[WITCH_DOCTOR] = 	UNIT_STATISTICS( 30*15, 14500, 2500,2,0, 0, 0, 0, SPIRIT_LODGE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 240, 37);
race[ORC].stats[SPIRIT_WALKER] = 	UNIT_STATISTICS( 42*15, 19500, 3500,3,0, VOODOO_LOUNGE, 0, 0, SPIRIT_LODGE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 250,  0);
race[ORC].stats[KODO_BEAST] = 		UNIT_STATISTICS( 30*15, 25500, 6000,4,0, WAR_MILL, 0, 0, BESTIARY, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 790, 75);
race[ORC].stats[WYVERN_RIDER] = 	UNIT_STATISTICS( 35*15, 26500, 4000,4,0, FORTRESS, 0, 0, BESTIARY, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 500, 75);
race[ORC].stats[TROLL_BAT_RIDER] = 	UNIT_STATISTICS( 25*15, 16000, 4000,2,0, FORTRESS, VOODOO_LOUNGE, 0, BESTIARY, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 500,  0);
race[ORC].stats[SPIRIT_WOLF_LVL1] = 	UNIT_STATISTICS(  0*15,   0,  0,0,0, FAR_SEER, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 200, 25);
race[ORC].stats[DIRE_WOLF_LVL2] = 	UNIT_STATISTICS(  0*15,   0,  0,0,0, FAR_SEER, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 300, 37);
race[ORC].stats[SHADOW_WOLF_LVL3] = 	UNIT_STATISTICS(  0*15,   0,  0,0,0, FAR_SEER, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 400, 50);
race[ORC].stats[SERPENT_WARD] = 	UNIT_STATISTICS(  0*15,   0,  0,0,0, FAR_SEER, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, SUPPORT_UNIT_TYPE,   0,  0);
race[ORC].stats[BLADEMASTER] = 		UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_STORMS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[ORC].stats[FAR_SEER] = 		UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_STORMS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[ORC].stats[TAUREN_CHIEFTAIN] = 	UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_STORMS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[ORC].stats[SHADOW_HUNTER] = 	UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_STORMS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[ORC].stats[BURROW] = 		UNIT_STATISTICS( 70*15, 16000, 4000,0,8, 0, 0, 0, PEON, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPLY_UNIT_TYPE, 600,  0);
race[ORC].stats[WAR_MILL] = 		UNIT_STATISTICS( 70*15, 20500,  0,0,0, 0, 0, 0, PEON, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, RESEARCH_FACILITY_UNIT_TYPE,1000,  0);
race[ORC].stats[GREAT_HALL] = 		UNIT_STATISTICS(150*15, 38500,18500,0,10, 0, 0, 0, PEON, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPLY_UNIT_TYPE,1500,  0);
race[ORC].stats[STRONGHOLD] = 		UNIT_STATISTICS(120*15, 31500, 9000,0,0, 0, 0, 0, GREAT_HALL, 0, 0, 0, IS_MORPHING, 0, ADD_ON_UNIT_TYPE,2000,  0);
race[ORC].stats[FORTRESS] = 		UNIT_STATISTICS(120*15, 34500,21000,0,0, ALTAR_OF_STORMS, 0, 0, STRONGHOLD, 0, 0, 0, IS_MORPHING, 0, ADD_ON_UNIT_TYPE,2500,  0);
race[ORC].stats[ALTAR_OF_STORMS] = 	UNIT_STATISTICS( 60*15, 18000, 5000,0,0, 0, 0, 0, PEON, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE, 900,  0);
race[ORC].stats[ORC_BARRACKS] = 	UNIT_STATISTICS( 60*15, 18000, 5000,0,0, 0, 0, 0, PEON, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1200,  0);
race[ORC].stats[BESTIARY] = 		UNIT_STATISTICS( 70*15, 14500,14000,0,0, 0, 0, 0, PEON, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1100,  0);
race[ORC].stats[SPIRIT_LODGE] = 	UNIT_STATISTICS( 70*15, 15000,15000,0,0, 0, 0, 0, PEON, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE, 800,  0);
race[ORC].stats[TAUREN_TOTEM] = 	UNIT_STATISTICS( 70*15,  9000,20000,0,0, WAR_MILL, FORTRESS, 0, PEON, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1200,  0);
race[ORC].stats[VOODOO_LOUNGE] = 	UNIT_STATISTICS( 60*15, 13000, 3000,0,0, 0, 0, 0, PEON, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, RESEARCH_FACILITY_UNIT_TYPE, 500,  0);
race[ORC].stats[WATCH_TOWER] = 		UNIT_STATISTICS( 80*15, 11000, 8000,0,0, WAR_MILL, 0, 0, PEON, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[ORC].stats[ORC_BACKPACK] = 	UNIT_STATISTICS( 20*15,  5000, 2500,0,0, VOODOO_LOUNGE, 0, 0, 0, 0, 0, R_ORC_BACKPACK, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[PILLAGE] = 		UNIT_STATISTICS( 45*15,  7500, 2500,0,0, 0, 0, 0, 0, 0, 0, R_PILLAGE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[BERSERKER_STRENGTH] = 	UNIT_STATISTICS( 40*15,  5000,15000,0,0, 0, 0, 0, ORC_BARRACKS, 0, 0, R_BERSERKER_STRENGTH, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[TROLL_REGENERATION] = 	UNIT_STATISTICS( 35*15, 10000,10000,0,0, WAR_MILL, 0, 0, ORC_BARRACKS, 0, 0, R_TROLL_REGENERATION, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[BERSERKER] = 		UNIT_STATISTICS( 40*15,  7500,17500,0,0, FORTRESS, WAR_MILL, 0, ORC_BARRACKS, 0, 0, R_BERSERKER, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[BURNING_OIL] = 		UNIT_STATISTICS( 30*15,  5000,15000,0,0, FORTRESS, 0, 0, ORC_BARRACKS, 0, 0, R_BURNING_OIL, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[REINFORCED_DEFENSE] = 	UNIT_STATISTICS( 60*15,  5000,20000,0,0, FORTRESS, 0, 0, WAR_MILL, 0, 0, R_REINFORCED_DEFENSE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[ENSNARE] = 		UNIT_STATISTICS( 40*15,  5000, 7500,0,0, 0, 0, 0, BESTIARY, 0, 0, R_ENSNARE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[WAR_DRUMS] = 		UNIT_STATISTICS( 40*15, 10000,15000,0,0, FORTRESS, WAR_MILL, 0, BESTIARY, 0, 0, R_WAR_DRUMS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[ENVENOMED_SPEARS] = 	UNIT_STATISTICS( 40*15, 10000,15000,0,0, FORTRESS, 0, 0, BESTIARY, 0, 0, R_ENVENOMED_SPEARS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[LIQUID_FIRE] = 		UNIT_STATISTICS( 75*15,  7500,12500,0,0, FORTRESS, VOODOO_LOUNGE, 0, BESTIARY, 0, 0, R_LIQUID_FIRE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[PULVERIZE] = 		UNIT_STATISTICS( 40*15, 10000,25000,0,0, 0, 0, 0, TAUREN_TOTEM, 0, 0, R_PULVERIZE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[MELEE_WEAPONS] = 	UNIT_STATISTICS( 60*15, 10000, 7500,0,0, 0, 0, 0, WAR_MILL, 0, 0, R_MELEE_WEAPONS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[UNIT_ARMOR] = 		UNIT_STATISTICS( 60*15, 15000, 7500,0,0, 0, 0, 0, WAR_MILL, 0, 0, R_UNIT_ARMOR, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[RANGED_WEAPONS] = 	UNIT_STATISTICS( 60*15,  7500, 7500,0,0, 0, 0, 0, WAR_MILL, 0, 0, R_RANGED_WEAPONS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[SPIKED_BARRICADES] = 	UNIT_STATISTICS( 60*15,  2500, 7500,0,0, 0, 0, 0, WAR_MILL, 0, 0, R_SPIKED_BARRICADES, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
		// !!! Spiked Lvl 3 : 150 Gold!
race[ORC].stats[SHAMAN_TRAINING] = 	UNIT_STATISTICS( 60*15, 10000,  0,0,0, 0, 0, 0, SPIRIT_LODGE, 0, 0, R_SHAMAN_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[WITCH_DOCTOR_TRAINING] = UNIT_STATISTICS( 60*15, 10000,  0,0,0, 0, 0, 0, SPIRIT_LODGE, 0, 0, R_WITCH_DOCTOR_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ORC].stats[SPIRIT_WALKER_TRAINING] = UNIT_STATISTICS( 60*15, 10000, 0,0,0, 0, 0, 0, SPIRIT_LODGE, 0, 0, R_SPIRIT_WALKER_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
                
race[ORC].stats[R_ORC_BACKPACK] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_PILLAGE] = 		UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_BERSERKER_STRENGTH] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_TROLL_REGENERATION] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_BERSERKER] = 		UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_BURNING_OIL] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_REINFORCED_DEFENSE] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_ENSNARE] = 		UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_WAR_DRUMS] = 		UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_ENVENOMED_SPEARS] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_LIQUID_FIRE] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_PULVERIZE] = 		UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_MELEE_WEAPONS] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_UNIT_ARMOR] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_RANGED_WEAPONS] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_SPIKED_BARRICADES] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
		// !!! Spiked Lvl 3 : 150 Gold!
race[ORC].stats[R_SHAMAN_TRAINING] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_WITCH_DOCTOR_TRAINING] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ORC].stats[R_SPIRIT_WALKER_TRAINING] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
 

// verschwinden wisps beim bauen?
race[ELVES].stats[WISP] = 		UNIT_STATISTICS( 14*15,  6000,  0,1,0, 0, 0, 0, TREE_OF_LIFE, TREE_OF_AGES, TREE_OF_ETERNITY, 0, NEEDED_UNTIL_COMPLETE, 0, WORKER_UNIT_TYPE, 120, 25, AFFECTS_GOLD);
race[ELVES].stats[WOOD_WISP] = 		UNIT_STATISTICS( 3*15,  0,  0,0,0, 0, 0, 0, WISP, 0, 0, 0, IS_MORPHING, 0, GAS_MINER_UNIT_TYPE, 120, 25, AFFECTS_WOOD);

race[ELVES].stats[WISP_FROM_WOOD_TO_GOLD]=UNIT_STATISTICS( 3*15, 0,  0,  0, 0, 0, 0, 0, WOOD_WISP, 0, 0, 0, IS_MORPHING, WISP, ORDER_UNIT_TYPE,  0, 0, AFFECTS_GOLD_AND_WOOD);
race[ELVES].stats[ARCHER] = 		UNIT_STATISTICS( 20*15, 13000, 1000,2,0, 0, 0, 0, ANCIENT_OF_WAR, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 250, 37);
race[ELVES].stats[HUNTRESS] = 		UNIT_STATISTICS( 30*15, 19500, 2000,3,0, HUNTERS_HALL, 0, 0, ANCIENT_OF_WAR, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 550, 50);
race[ELVES].stats[BALLISTA] = 		UNIT_STATISTICS( 48*15, 21000, 6500,4,0, HUNTERS_HALL, 0, 0, ANCIENT_OF_WAR, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 380, 75);
race[ELVES].stats[DRYAD] = 		UNIT_STATISTICS( 30*15, 14500, 6000,3,0, 0, 0, 0, ANCIENT_OF_LORE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 380, 37);
race[ELVES].stats[DRUID_OF_THE_CLAW] = 	UNIT_STATISTICS( 30*15, 25500, 8000,4,0, 0, 0, 0, ANCIENT_OF_LORE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 430, 75);
race[ELVES].stats[MOUNTAIN_GIANT] = 	UNIT_STATISTICS( 45*15, 42500,10000,7,0, ANCIENT_OF_WONDERS, 0, 0, ANCIENT_OF_LORE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 1000,  0);
race[ELVES].stats[HIPPOGRYPH] = 	UNIT_STATISTICS( 40*15, 16000, 2000,2,0, 0, 0, 0, ANCIENT_OF_WIND, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 500, 37);
race[ELVES].stats[DRUID_OF_THE_THALON] =UNIT_STATISTICS( 22*15, 13500, 2000,2,0, 0, 0, 0, ANCIENT_OF_WIND, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 225, 37);
race[ELVES].stats[FAERIE_DRAGON] = 	UNIT_STATISTICS( 25*15, 15500, 2500,2,0, ANCIENT_OF_WONDERS, 0, 0, ANCIENT_OF_WIND, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 200,  0);
race[ELVES].stats[CHIMAERA] = 		UNIT_STATISTICS( 65*15, 33000, 7000,5,0, TREE_OF_ETERNITY, ANCIENT_OF_WIND, 0, CHIMAERA_ROOST, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 900,100);
race[ELVES].stats[TREANT] = 		UNIT_STATISTICS(  0*15,   0,  0,0,0, KEEPER_OF_THE_GROVE, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE,  300, 25);
race[ELVES].stats[SPIRIT_OF_VENGEANCE] =UNIT_STATISTICS(  0*15,   0,  0,0,0, KEEPER_OF_THE_GROVE, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 500,  0);
race[ELVES].stats[VENGEANCE] = 		UNIT_STATISTICS(  0*15,   0,  0,0,0, KEEPER_OF_THE_GROVE, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 500,  0);
race[ELVES].stats[DEMON_HUNTER] = 	UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_ELDERS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[ELVES].stats[KEEPER_OF_THE_GROVE] =UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_ELDERS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[ELVES].stats[PRIESTESS_OF_THE_MOON]=UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_ELDERS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[ELVES].stats[WARDEN] = 		UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_ELDERS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[ELVES].stats[ANCIENT_OF_WAR] = 	UNIT_STATISTICS( 60*15, 15000, 6000,0,0, 0, 0, 0, WISP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1000, 25);
race[ELVES].stats[ANCIENT_OF_LORE] = 	UNIT_STATISTICS( 80*15, 15500,14500,0,0, 0, 0, 0, WISP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE, 900, 25);
race[ELVES].stats[ANCIENT_OF_WIND] = 	UNIT_STATISTICS( 70*15, 15000,14000,0,0, 0, 0, 0, WISP, 0, 0, 0, NEEDED_UNTIL_COMPLETE , 0, PRODUCE_UNIT_TYPE, 900, 25);
race[ELVES].stats[ANCIENT_PROTECTOR] = 	UNIT_STATISTICS( 80*15, 13500, 8000,0,0, 0, 0, 0, WISP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 550, 50);
race[ELVES].stats[TREE_OF_LIFE] = 	UNIT_STATISTICS(110*15, 34000,18500,0,10,0, 0, 0, WISP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPLY_UNIT_TYPE,1300, 25);
race[ELVES].stats[TREE_OF_AGES] = 	UNIT_STATISTICS(120*15, 32000, 8000,0,0, 0, 0, 0, TREE_OF_LIFE, 0, 0, 0, IS_MORPHING, 0, ADD_ON_UNIT_TYPE,1700, 25);
race[ELVES].stats[TREE_OF_ETERNITY] = 	UNIT_STATISTICS(120*15, 35000,22000,0,10,ALTAR_OF_ELDERS, 0, 0, TREE_OF_AGES, 0, 0, 0, IS_MORPHING, 0, ADD_ON_UNIT_TYPE,2000, 25);
race[ELVES].stats[ANCIENT_OF_WONDERS] = UNIT_STATISTICS( 60*15,  9000, 3000,0,0, 0, 0, 0, WISP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, RESEARCH_FACILITY_UNIT_TYPE, 200,  0);
race[ELVES].stats[MOON_WELL] = 		UNIT_STATISTICS( 50*15, 18000, 4000,0,8, 0, 0, 0, WISP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPLY_UNIT_TYPE, 600,  0);
race[ELVES].stats[ALTAR_OF_ELDERS] = 	UNIT_STATISTICS( 60*15, 18000, 5000,0,0, 0, 0, 0, WISP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE, 900,  0);
race[ELVES].stats[HUNTERS_HALL] = 	UNIT_STATISTICS( 60*15, 21000,10000,0,0, 0, 0, 0, WISP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, RESEARCH_FACILITY_UNIT_TYPE,1100,  0);
race[ELVES].stats[CHIMAERA_ROOST] = 	UNIT_STATISTICS( 80*15, 10000,23000,0,0, TREE_OF_ETERNITY, ANCIENT_OF_WIND, 0, WISP, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1200,  0);
race[ELVES].stats[ELVES_BACKPACK] = 	UNIT_STATISTICS( 20*15,  5000, 2500,0,0, ANCIENT_OF_WONDERS, 0, 0, 0, 0, 0, R_ELVES_BACKPACK, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[IMPROVED_BOWS] = 	UNIT_STATISTICS( 35*15,  5000,10000,0,0, 0, 0, 0, ANCIENT_OF_WAR, 0, 0, R_IMPROVED_BOWS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[MARKSMANSHIP] = 	UNIT_STATISTICS( 40*15, 10000,17500,0,0, TREE_OF_ETERNITY, HUNTERS_HALL, 0, ANCIENT_OF_WAR, 0, 0, R_MARKSMANSHIP, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[SENTINEL] = 		UNIT_STATISTICS( 20*15, 10000,10000,0,0, HUNTERS_HALL, 0, 0, ANCIENT_OF_WAR, 0, 0, R_SENTINEL, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[MOON_GLAIVE] = 	UNIT_STATISTICS( 35*15, 10000,15000,0,0, TREE_OF_ETERNITY, HUNTERS_HALL, 0, ANCIENT_OF_WAR, 0, 0, R_MOON_GLAIVE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[IMPALING_BOLT] = 	UNIT_STATISTICS( 60*15, 12500,10000,0,0, HUNTERS_HALL, 0, 0, ANCIENT_OF_WAR, 0, 0, R_IMPALING_BOLT, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[ULTRAVISION] = 	UNIT_STATISTICS( 45*15,  5000, 5000,0,0, 0, 0, 0, HUNTERS_HALL, 0, 0, R_ULTRAVISION, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[WELL_SPRING] = 	UNIT_STATISTICS( 30*15,  7500,15000,0,0, TREE_OF_ETERNITY, 0, 0, HUNTERS_HALL, 0, 0, R_WELL_SPRING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[NATURES_BLESSING] = 	UNIT_STATISTICS( 60*15, 20000,15000,0,0, 0, 0, 0, 0, 0, 0, R_NATURES_BLESSING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[ABOLISH_MAGIC] = 	UNIT_STATISTICS( 45*15,  5000, 5000,0,0, 0, 0, 0, ANCIENT_OF_LORE, 0, 0, R_ABOLISH_MAGIC, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[ENCHANTED_BEARS] = 	UNIT_STATISTICS( 20*15,  2500,10000,0,0, TREE_OF_ETERNITY, DRUID_OF_THE_CLAW_TRAINING, 0, ANCIENT_OF_LORE, 0, 0, R_ENCHANTED_BEARS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[HARDENED_SKIN] = 	UNIT_STATISTICS( 40*15, 10000,25000,0,0, ANCIENT_OF_WONDERS, TREE_OF_ETERNITY, 0, ANCIENT_OF_LORE, 0, 0, R_HARDENED_SKIN, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[RESISTANT_SKIN] = 	UNIT_STATISTICS( 75*15,  5000,10000,0,0, ANCIENT_OF_WONDERS, TREE_OF_ETERNITY, 0, ANCIENT_OF_LORE, 0, 0, R_RESISTANT_SKIN, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[HIPPOGRYPH_TRAINING] =UNIT_STATISTICS( 30*15,  7500, 7500,0,0, 0, 0, 0, ANCIENT_OF_WIND, 0, 0, R_HIPPOGRYPH_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[ENCHANTED_CROWS] = 	UNIT_STATISTICS( 20*15,  2500,10000,0,0, TREE_OF_ETERNITY, DRUID_OF_THE_THALON_TRAINING, 0, ANCIENT_OF_WIND, 0, 0, R_ENCHANTED_CROWS, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[CORROSIVE_BREATH] = 	UNIT_STATISTICS( 40*15, 12500,22500,0,0, 0, 0, 0, CHIMAERA_ROOST, 0, 0, R_CORROSIVE_BREATH, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[STRENGTH_OF_THE_MOON]=UNIT_STATISTICS( 60*15, 12500, 7500,0,0, 0, 0, 0, HUNTERS_HALL, 0, 0, R_STRENGTH_OF_THE_MOON, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[MOON_ARMOR] = 	UNIT_STATISTICS( 60*15, 15000, 7500,0,0, 0, 0, 0, HUNTERS_HALL, 0, 0, R_MOON_ARMOR, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[STRENGTH_OF_THE_WILD]=UNIT_STATISTICS( 60*15, 10000, 5000,0,0, 0, 0, 0, HUNTERS_HALL, 0, 0, R_STRENGTH_OF_THE_WILD, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[REINFORCED_HIDE] = 	UNIT_STATISTICS( 60*15, 15000, 5000,0,0, 0, 0, 0, HUNTERS_HALL, 0, 0, R_REINFORCED_HIDE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[DRUID_OF_THE_CLAW_TRAINING]=UNIT_STATISTICS( 60*15, 10000,  0,0,0, 0, 0, 0, ANCIENT_OF_LORE, 0, 0, R_DRUID_OF_THE_CLAW_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[ELVES].stats[DRUID_OF_THE_THALON_TRAINING]=UNIT_STATISTICS( 60*15, 10000, 0,0,0, 0, 0, 0, ANCIENT_OF_WIND, 0, 0, R_DRUID_OF_THE_THALON_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
//race[ELVES].stats[CANCEL_BUILDING] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, _UNIT_TYPE,   0,  0); TODO

race[ELVES].stats[R_ELVES_BACKPACK] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_IMPROVED_BOWS] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_MARKSMANSHIP] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_SENTINEL] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_MOON_GLAIVE] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_IMPALING_BOLT] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_ULTRAVISION] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_WELL_SPRING] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_NATURES_BLESSING] =	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_ABOLISH_MAGIC] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_ENCHANTED_BEARS] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_HARDENED_SKIN] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_RESISTANT_SKIN] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_HIPPOGRYPH_TRAINING] =UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_ENCHANTED_CROWS] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_CORROSIVE_BREATH] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_STRENGTH_OF_THE_MOON]=UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_MOON_ARMOR] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_STRENGTH_OF_THE_WILD]=UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_REINFORCED_HIDE] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_DRUID_OF_THE_CLAW_TRAINING]=UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[ELVES].stats[R_DRUID_OF_THE_THALON_TRAINING]=UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);


race[UNDEAD].stats[ACOLYTE] = 		UNIT_STATISTICS( 15*15,  7500,  0,1,0, 0, 0, 0, 0, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, WORKER_UNIT_TYPE, 180, 25, AFFECTS_GOLD);
race[UNDEAD].stats[GHOUL] = 		UNIT_STATISTICS( 18*15, 12000,  0,2,0, 0, 0, 0, CRYPT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 330, 37, AFFECTS_WOOD);
race[UNDEAD].stats[CRYPT_FIEND] = 	UNIT_STATISTICS( 30*15, 21500, 4000,3,0, GRAVEYARD, 0, 0, CRYPT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 550, 50);
race[UNDEAD].stats[GARGOYLE] = 		UNIT_STATISTICS( 35*15, 18500, 3000,2,0, BLACK_CITADEL, GRAVEYARD, 0, CRYPT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 400, 37);
race[UNDEAD].stats[ABOMINATION] = 	UNIT_STATISTICS( 45*15, 24000, 7000,4,0, BLACK_CITADEL, 0, 0, SLAUGHTERHOUSE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE,1080, 75);
race[UNDEAD].stats[MEAT_WAGON] = 	UNIT_STATISTICS( 45*15, 23000, 5000,4,0, 0, 0, 0, SLAUGHTERHOUSE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 380, 75);
race[UNDEAD].stats[NECROMANCER] = 	UNIT_STATISTICS( 30*15, 14500, 2000,2,0, 0, 0, 0, TEMPLE_OF_THE_DAMNED, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 230, 37);
race[UNDEAD].stats[BANSHEE] = 		UNIT_STATISTICS( 35*15, 15500, 3000,2,0, 0, 0, 0, TEMPLE_OF_THE_DAMNED, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 210, 50);
race[UNDEAD].stats[FROST_WYRM] = 	UNIT_STATISTICS( 60*15, 38500,12000,7,0, 0, 0, 0, BONEYARD, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE,1100,150);
race[UNDEAD].stats[SHADE] = 		UNIT_STATISTICS( 15*15,   0,  0,1,0, 0, 0, 0, SACRIFICIAL_PIT, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 250, 25);
race[UNDEAD].stats[SKELETON_WARRIOR] = 	UNIT_STATISTICS(  0,   0,  0,0,0, LICH, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 180, 25);
race[UNDEAD].stats[SKELETAL_MAGE] = 	UNIT_STATISTICS(  0,   0,  0,0,0, LICH, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 180, 25);
race[UNDEAD].stats[INFERNAL] = 		UNIT_STATISTICS(  0,   0,  0,0,0, DREAD_LORD, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE,1500,300);
//?
race[UNDEAD].stats[CARRION_BEETLE_LVL1]=UNIT_STATISTICS(  0,   0,  0,0,0, DEATH_KNIGHT, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 500,  0);
race[UNDEAD].stats[CARRION_BEETLE_LVL2]=UNIT_STATISTICS(  0,   0,  0,0,0, DEATH_KNIGHT, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 500,  0);
race[UNDEAD].stats[CARRION_BEETLE_LVL3]=UNIT_STATISTICS(  0,   0,  0,0,0, DEATH_KNIGHT, 0, 0, 0, 0, 0, 0, NEEDED_ONCE, 0, COMBAT_UNIT_TYPE, 500,  0);
race[UNDEAD].stats[OBSIDIAN_STATUE] = 	UNIT_STATISTICS( 45*15, 20000, 3500,3,0, 0, 0, 0, SLAUGHTERHOUSE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, COMBAT_UNIT_TYPE, 500,  0);
race[UNDEAD].stats[DEATH_KNIGHT] = 	UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_DARKNESS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[UNDEAD].stats[DREAD_LORD] = 	UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_DARKNESS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[UNDEAD].stats[LICH] = 		UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_DARKNESS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[UNDEAD].stats[CRYPT_LORD] = 	UNIT_STATISTICS( 55*15,   0,  0,5,0, 0, 0, 0, ALTAR_OF_DARKNESS, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPORT_UNIT_TYPE, 500,  0);
race[UNDEAD].stats[HAUNTED_GOLD_MINE] = UNIT_STATISTICS(110*15, 34000,18500,0,0, 0, 0, 0, ACOLYTE, 0, 0, GOLD_MINE, NEEDED_UNTIL_COMPLETE_IS_LOST_GLOBALLY, 0, SUPPLY_UNIT_TYPE, 950,  0, AFFECTS_GOLD); // ~
race[UNDEAD].stats[NECROPOLIS] = 	UNIT_STATISTICS(120*15, 32000, 8000,0,10,0, 0, 0, ACOLYTE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPLY_UNIT_TYPE, 1500,  0);
race[UNDEAD].stats[HALLS_OF_THE_DEAD] = UNIT_STATISTICS(120*15, 35000,22000,0,0, 0, 0, 0, NECROPOLIS, 0, 0, 0, IS_MORPHING, 0, ADD_ON_UNIT_TYPE,2000, 25);
race[UNDEAD].stats[BLACK_CITADEL] = 	UNIT_STATISTICS( 60*15, 15000, 6000,0,0, ALTAR_OF_DARKNESS, 0, 0, HALLS_OF_THE_DEAD, 0, 0, 0, IS_MORPHING, 0, ADD_ON_UNIT_TYPE,2300, 25);
race[UNDEAD].stats[CRYPT] = 		UNIT_STATISTICS( 80*15, 15500,14500,0,0, 0, 0, 0, ACOLYTE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE, 1300,  0, AFFECTS_WOOD);
race[UNDEAD].stats[ZIGGURAT] = 		UNIT_STATISTICS( 70*15, 15000,14000,0,10,0, 0, 0, ACOLYTE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, SUPPLY_UNIT_TYPE, 550,  0);
race[UNDEAD].stats[ALTAR_OF_DARKNESS] = UNIT_STATISTICS( 80*15, 13500, 8000,0,0, 0, 0, 0, ACOLYTE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE, 900,  0);
race[UNDEAD].stats[GRAVEYARD] = 	UNIT_STATISTICS( 60*15,  9000, 3000,0,0, 0, 0, 0, ACOLYTE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE, 900,  0);
race[UNDEAD].stats[SLAUGHTERHOUSE] = 	UNIT_STATISTICS( 50*15, 18000, 4000,0,0, GRAVEYARD, 0, 0, ACOLYTE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1200,  0);
race[UNDEAD].stats[TEMPLE_OF_THE_DAMNED]=UNIT_STATISTICS( 60*15, 18000, 5000,0,0, GRAVEYARD, 0, 0, ACOLYTE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1100,  0);
race[UNDEAD].stats[SACRIFICIAL_PIT] = 	UNIT_STATISTICS( 60*15, 21000,10000,0,0, 0, 0, 0, ACOLYTE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE, 900,  0);
race[UNDEAD].stats[BONEYARD] = 		UNIT_STATISTICS( 80*15, 10000,23000,0,0, BLACK_CITADEL, SACRIFICIAL_PIT, 0, ACOLYTE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE,1500,  0);
race[UNDEAD].stats[TOMB_OF_RELICS] = 	UNIT_STATISTICS( 80*15, 10000,23000,0,0, 0, 0, 0, ACOLYTE, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, PRODUCE_UNIT_TYPE, 500,  0);
race[UNDEAD].stats[NERUBIAN_TOWER] = 	UNIT_STATISTICS( 80*15, 10000,23000,0,0, TOMB_OF_RELICS, 0, 0, ZIGGURAT, 0, 0, 0, IS_LOST, 0, ADD_ON_UNIT_TYPE, 200, 25);
race[UNDEAD].stats[SPIRIT_TOWER] = 	UNIT_STATISTICS( 80*15, 10000,23000,0,0, GRAVEYARD, 0, 0, ZIGGURAT, 0, 0, 0, IS_LOST, 0, ADD_ON_UNIT_TYPE, 550, 25);
race[UNDEAD].stats[UNDEAD_BACKPACK] = 	UNIT_STATISTICS( 20*15,  5000, 2500,0,0, TOMB_OF_RELICS, 0, 0, 0, 0, 0, R_UNDEAD_BACKPACK, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[CANNIBALIZE] = 	UNIT_STATISTICS( 30*15,  7500,  000,0,0, 0, 0, 0, CRYPT, 0, 0, R_CANNIBALIZE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[GHOUL_FRENZY] = 	UNIT_STATISTICS( 45*15, 10000,15000,0,0, 0, 0, 0, CRYPT, 0, 0, R_GHOUL_FRENZY, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[WEB] = 		UNIT_STATISTICS( 30*15,  7500, 7500,0,0, GRAVEYARD, 0, 0, CRYPT, 0, 0, R_WEB, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[BURROW_UNDEAD] = 		UNIT_STATISTICS( 45*15,  7500, 7500,0,0, GRAVEYARD, 0, 0, CRYPT, 0, 0, R_BURROW_UNDEAD, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[STONE_FORM] = 	UNIT_STATISTICS( 40*15,  7500,15000,0,0, BLACK_CITADEL, GRAVEYARD, 0, CRYPT, 0, 0, R_STONE_FORM, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[DISEASE_CLOUD] = 	UNIT_STATISTICS( 45*15, 10000,20000,0,0, BLACK_CITADEL, 0, 0, SLAUGHTERHOUSE, 0, 0, R_DISEASE_CLOUD, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[EXHUME_CORPSES] = 	UNIT_STATISTICS( 20*15, 12500,10000,0,0, BLACK_CITADEL, 0, 0, SLAUGHTERHOUSE, 0, 0, R_EXHUME_CORPSES, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[DESTROYER] = 	UNIT_STATISTICS( 60*15,  7500,15000,0,0, BLACK_CITADEL, TOMB_OF_RELICS, 0, SLAUGHTERHOUSE, 0, 0, R_DESTROYER, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,    0,  0);
race[UNDEAD].stats[SKELETAL_LONGEVITY] =UNIT_STATISTICS( 60*15, 10000, 7500,0,0, 0, 0, 0, TEMPLE_OF_THE_DAMNED, 0, 0, R_SKELETAL_LONGEVITY, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[SKELETAL_MASTERY] = 	UNIT_STATISTICS( 45*15, 12500,15000,0,0, BLACK_CITADEL, 0, 0, TEMPLE_OF_THE_DAMNED, 0, 0, R_SKELETAL_MASTERY, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[FREEZING_BREATH] = 	UNIT_STATISTICS( 60*15, 15000,27500,0,0, 0, 0, 0, BONEYARD, 0, 0, R_FREEZING_BREATH, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[UNHOLY_STRENGTH] = 	UNIT_STATISTICS( 60*15, 12500, 5000,0,0, 0, 0, 0, GRAVEYARD, 0, 0, R_UNHOLY_STRENGTH, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[UNHOLY_ARMOR] = 	UNIT_STATISTICS( 60*15, 12500, 5000,0,0, 0, 0, 0, GRAVEYARD, 0, 0, R_UNHOLY_ARMOR, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[CREATURE_ATTACK] = 	UNIT_STATISTICS( 60*15, 15000, 5000,0,0, 0, 0, 0, GRAVEYARD, 0, 0, R_CREATURE_ATTACK, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[CREATURE_CARAPACE] = UNIT_STATISTICS( 60*15, 15000, 7500,0,0, 0, 0, 0, GRAVEYARD, 0, 0, R_CREATURE_CARAPACE, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[NECROMANCER_TRAINING]=UNIT_STATISTICS( 60*15, 10000,  0,0,0, 0, 0, 0, TEMPLE_OF_THE_DAMNED, 0, 0, R_NECROMANCER_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[BANSHEE_TRAINING] = 	UNIT_STATISTICS( 60*15, 10000,  0,0,0, 0, 0, 0, TEMPLE_OF_THE_DAMNED, 0, 0, R_BANSHEE_TRAINING, NEEDED_UNTIL_COMPLETE_IS_LOST_EVERYWHERE, 0, RESEARCH_UNIT_TYPE,   0,  0);

race[UNDEAD].stats[R_UNDEAD_BACKPACK] =	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_CANNIBALIZE] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_GHOUL_FRENZY] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_WEB] = 		UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_BURROW_UNDEAD] =	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_STONE_FORM] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_DISEASE_CLOUD] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_EXHUME_CORPSES] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_DESTROYER] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,    0,  0);
race[UNDEAD].stats[R_SKELETAL_LONGEVITY] =UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_SKELETAL_MASTERY] =UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_FREEZING_BREATH] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_UNHOLY_STRENGTH] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_UNHOLY_ARMOR] = 	UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_CREATURE_ATTACK] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_CREATURE_CARAPACE] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_NECROMANCER_TRAINING]=UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);
race[UNDEAD].stats[R_BANSHEE_TRAINING] =UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NO_FACILITY_BEHAVIOUR_DEFINED, 0, INVALID_UNIT_TYPE,   0,  0);


race[UNDEAD].stats[UNSUMMON_BUILDING] = UNIT_STATISTICS(  0,   0,  0,0,0, 0, 0, 0, 0, 0, 0, 0, NEEDED_UNTIL_COMPLETE, 0, ORDER_UNIT_TYPE,   0,  0);

	for(unsigned int k = MAX_RACES; k--;)
		race[k].fillInfluenceList(); // 'allows' and 'needs'
	initStringIdentifier();
}

WARCRAFT3::~WARCRAFT3()
{}

void WARCRAFT3::initStringIdentifier()
{
        gameStringIdentifier.resize(MAX_GAME_STRINGS);
        gameStringIdentifier[NULL_STRING] = "NULL_STRING";
        gameStringIdentifier[HUMAN_STRING] = "HUMAN_STRING";
        gameStringIdentifier[ORC_STRING] = "ORC_STRING";
        gameStringIdentifier[ELVES_STRING] = "ELVES_STRING";
        gameStringIdentifier[UNDEAD_STRING] = "UNDEAD_STRING";

        gameStringIdentifier[GOLD_STRING] = "GOLD_STRING";
        gameStringIdentifier[WOOD_STRING] = "WOOD_STRING";

        gameStringIdentifier[UNIT_TYPE_0_STRING] = "UNIT_TYPE_0_STRING";
        gameStringIdentifier[UNIT_TYPE_1_STRING] = "UNIT_TYPE_1_STRING";
        gameStringIdentifier[UNIT_TYPE_2_STRING] = "UNIT_TYPE_2_STRING";
        gameStringIdentifier[UNIT_TYPE_3_STRING] = "UNIT_TYPE_3_STRING";
        gameStringIdentifier[UNIT_TYPE_4_STRING] = "UNIT_TYPE_4_STRING";
        gameStringIdentifier[UNIT_TYPE_5_STRING] = "UNIT_TYPE_5_STRING";
        gameStringIdentifier[UNIT_TYPE_6_STRING] = "UNIT_TYPE_6_STRING";
        gameStringIdentifier[UNIT_TYPE_7_STRING] = "UNIT_TYPE_7_STRING";
        gameStringIdentifier[UNIT_TYPE_8_STRING] = "UNIT_TYPE_8_STRING";
        gameStringIdentifier[UNIT_TYPE_9_STRING] = "UNIT_TYPE_9_STRING";
        gameStringIdentifier[UNIT_TYPE_10_STRING] = "UNIT_TYPE_10_STRING";

        gameStringIdentifier[GAME_SPEED_SLOWEST_STRING] = "GAME_SPEED_SLOWEST_STRING";
        gameStringIdentifier[GAME_SPEED_SLOWER_STRING] = "GAME_SPEED_SLOWER_STRING";
        gameStringIdentifier[GAME_SPEED_SLOW_STRING]    = "GAME_SPEED_SLOW_STRING";
        gameStringIdentifier[GAME_SPEED_NORMAL_STRING] = "GAME_SPEED_NORMAL_STRING";
        gameStringIdentifier[GAME_SPEED_FAST_STRING] = "GAME_SPEED_FAST_STRING";
        gameStringIdentifier[GAME_SPEED_FASTER_STRING] = "GAME_SPEED_FASTER_STRING";
        gameStringIdentifier[GAME_SPEED_FASTEST_STRING] = "GAME_SPEED_FASTEST_STRING";

	for(unsigned int i = GAME::MAX_RACES; i--;)
        	race[i].unitsStringIdentifier.resize(RACE::UNIT_TYPE_COUNT); // mmh...
	

	race[HUMAN].unitsStringIdentifier[NONE] = "NONE";
	race[HUMAN].unitsStringIdentifier[GOLD_MINE] = "GOLD_MINE";
	race[HUMAN].unitsStringIdentifier[TREE] = "TREE";
	race[HUMAN].unitsStringIdentifier[PEASANT] = "PEASANT";
	race[HUMAN].unitsStringIdentifier[WOOD_PEASANT] = "WOOD_PEASANT";
	race[HUMAN].unitsStringIdentifier[PEASANT_FROM_WOOD_TO_GOLD] = "PEASANT_FROM_WOOD_TO_GOLD";
	race[HUMAN].unitsStringIdentifier[HUMAN_WAIT] = "HUMAN_WAIT";
	race[HUMAN].unitsStringIdentifier[MILITIA] = "MILITIA";
	race[HUMAN].unitsStringIdentifier[FOOTMAN] = "FOOTMAN";
	race[HUMAN].unitsStringIdentifier[RIFLEMAN] = "RIFLEMAN";
	race[HUMAN].unitsStringIdentifier[KNIGHT] = "KNIGHT";
	race[HUMAN].unitsStringIdentifier[PRIEST] = "PRIEST";
	race[HUMAN].unitsStringIdentifier[SORCERESS] = "SORCERESS";
	race[HUMAN].unitsStringIdentifier[SPELL_BREAKER] = "SPELL_BREAKER";
	race[HUMAN].unitsStringIdentifier[GYROCEPTOR] = "GYROCEPTOR";
	race[HUMAN].unitsStringIdentifier[MORTAR_TEAM] = "MORTAR_TEAM";
	race[HUMAN].unitsStringIdentifier[STEAM_TANK] = "STEAM_TANK";
	race[HUMAN].unitsStringIdentifier[GRYPHON_RIDER] = "GRYPHON_RIDER";
	race[HUMAN].unitsStringIdentifier[DRAGONHAWK_RIDER] = "DRAGONHAWK_RIDER";
	race[HUMAN].unitsStringIdentifier[WATER_ELEMENTAL_LVL1] = "WATER_ELEMENTAL_LVL1";
	race[HUMAN].unitsStringIdentifier[WATER_ELEMENTAL_LVL2] = "WATER_ELEMENTAL_LVL2";
	race[HUMAN].unitsStringIdentifier[WATER_ELEMENTAL_LVL3] = "WATER_ELEMENTAL_LVL3";
	race[HUMAN].unitsStringIdentifier[PHOENIX] = "PHOENIX";
	race[HUMAN].unitsStringIdentifier[PALADIN] = "PALADIN";
	race[HUMAN].unitsStringIdentifier[ARCHMAGE] = "ARCHMAGE";
	race[HUMAN].unitsStringIdentifier[MOUNTAIN_KING] = "MOUNTAIN_KING";
	race[HUMAN].unitsStringIdentifier[BLOOD_MAGE] = "BLOOD_MAGE";
	race[HUMAN].unitsStringIdentifier[FARM] = "FARM";
	race[HUMAN].unitsStringIdentifier[TOWN_HALL] = "TOWN_HALL";
	race[HUMAN].unitsStringIdentifier[KEEP] = "KEEP";
	race[HUMAN].unitsStringIdentifier[CASTLE] = "CASTLE";
	race[HUMAN].unitsStringIdentifier[HUMAN_BARRACKS] = "HUMAN_BARRACKS";
	race[HUMAN].unitsStringIdentifier[ALTAR_OF_KINGS] = "ALTAR_OF_KINGS";
	race[HUMAN].unitsStringIdentifier[LUMBER_MILL] = "LUMBER_MILL";
	race[HUMAN].unitsStringIdentifier[SCOUT_TOWER] = "SCOUT_TOWER";
	race[HUMAN].unitsStringIdentifier[BLACKSMITH] = "BLACKSMITH";
	race[HUMAN].unitsStringIdentifier[WORKSHOP] = "WORKSHOP";
	race[HUMAN].unitsStringIdentifier[ARCANE_SANCTUM] = "ARCANE_SANCTUM";
	race[HUMAN].unitsStringIdentifier[GRYPHON_AVIARY] = "GRYPHON_AVIARY";
	race[HUMAN].unitsStringIdentifier[ARCANE_VAULT] = "ARCANE_VAULT";
	race[HUMAN].unitsStringIdentifier[GUARD_TOWER] = "GUARD_TOWER";
	race[HUMAN].unitsStringIdentifier[CANNON_TOWER] = "CANNON_TOWER";
	race[HUMAN].unitsStringIdentifier[ARCANE_TOWER] = "ARCANE_TOWER";
	race[HUMAN].unitsStringIdentifier[HUMAN_BACKPACK] = "HUMAN_BACKPACK";
	race[HUMAN].unitsStringIdentifier[DEFEND] = "DEFEND";
	race[HUMAN].unitsStringIdentifier[LONG_RIFLES] = "LONG_RIFLES";
	race[HUMAN].unitsStringIdentifier[ANIMAL_WAR_TRAINING] = "ANIMAL_WAR_TRAINING";
	race[HUMAN].unitsStringIdentifier[GYROCEPTOR_BOMBS] = "GYROCEPTOR_BOMBS";
	race[HUMAN].unitsStringIdentifier[WAR_ENGINE] = "WAR_ENGINE";
	race[HUMAN].unitsStringIdentifier[FLARE] = "FLARE";
	race[HUMAN].unitsStringIdentifier[FRAGMENTATION_SHARDS] = "FRAGMENTATION_SHARDS";
	race[HUMAN].unitsStringIdentifier[STORM_HAMMERS] = "STORM_HAMMERS";
	race[HUMAN].unitsStringIdentifier[LUMBER_HARVESTING] = "LUMBER_HARVESTING";
	race[HUMAN].unitsStringIdentifier[MASONRY] = "MASONRY";
	race[HUMAN].unitsStringIdentifier[MELEE_WEAPONS] = "MELEE_WEAPONS";
	race[HUMAN].unitsStringIdentifier[MELEE_PLATING] = "MELEE_PLATING";
	race[HUMAN].unitsStringIdentifier[RANGED_WEAPONS] = "RANGED_WEAPONS";
	race[HUMAN].unitsStringIdentifier[LEATHER_ARMOR] = "LEATHER_ARMOR";
	race[HUMAN].unitsStringIdentifier[PRIEST_TRAINING] = "PRIEST_TRAINING";
	race[HUMAN].unitsStringIdentifier[SORCERESS_TRAINING] = "SORCERESS_TRAINING";
	race[HUMAN].unitsStringIdentifier[CONTROL_MAGIC] = "CONTROL_MAGIC";
	race[HUMAN].unitsStringIdentifier[MAGIC_SENTINEL] = "MAGIC_SENTINEL";
	race[HUMAN].unitsStringIdentifier[R_HUMAN_BACKPACK] = "R_HUMAN_BACKPACK";
	race[HUMAN].unitsStringIdentifier[R_DEFEND] = "R_DEFEND";
	race[HUMAN].unitsStringIdentifier[R_LONG_RIFLES] = "R_LONG_RIFLES";
	race[HUMAN].unitsStringIdentifier[R_ANIMAL_WAR_TRAINING] = "R_ANIMAL_WAR_TRAINING";
	race[HUMAN].unitsStringIdentifier[R_GYROCEPTOR_BOMBS] = "R_GYROCEPTOR_BOMBS";
	race[HUMAN].unitsStringIdentifier[R_WAR_ENGINE] = "R_WAR_ENGINE";
	race[HUMAN].unitsStringIdentifier[R_FLARE] = "R_FLARE";
	race[HUMAN].unitsStringIdentifier[R_FRAGMENTATION_SHARDS] = "R_FRAGMENTATION_SHARDS";
	race[HUMAN].unitsStringIdentifier[R_STORM_HAMMERS] = "R_STORM_HAMMERS";
	race[HUMAN].unitsStringIdentifier[R_LUMBER_HARVESTING] = "R_LUMBER_HARVESTING";
	race[HUMAN].unitsStringIdentifier[R_MASONRY] = "R_MASONRY";
	race[HUMAN].unitsStringIdentifier[R_MELEE_WEAPONS] = "R_MELEE_WEAPONS";
	race[HUMAN].unitsStringIdentifier[R_MELEE_PLATING] = "R_MELEE_PLATING";
	race[HUMAN].unitsStringIdentifier[R_RANGED_WEAPONS] = "R_RANGED_WEAPONS";
	race[HUMAN].unitsStringIdentifier[R_LEATHER_ARMOR] = "R_LEATHER_ARMOR";
	race[HUMAN].unitsStringIdentifier[R_PRIEST_TRAINING] = "R_PRIEST_TRAINING";
	race[HUMAN].unitsStringIdentifier[R_SORCERESS_TRAINING] = "R_SORCERESS_TRAINING";
	race[HUMAN].unitsStringIdentifier[R_CONTROL_MAGIC] = "R_CONTROL_MAGIC";
	race[HUMAN].unitsStringIdentifier[R_MAGIC_SENTINEL] = "R_MAGIC_SENTINEL";

	race[ORC].unitsStringIdentifier[NONE] = "NONE";
	race[ORC].unitsStringIdentifier[GOLD_MINE] = "GOLD_MINE";
	race[ORC].unitsStringIdentifier[TREE] = "TREE";
	race[ORC].unitsStringIdentifier[PEON] = "PEON";
	race[ORC].unitsStringIdentifier[WOOD_PEON] = "WOOD_PEON";
	race[ORC].unitsStringIdentifier[PEON_FROM_WOOD_TO_GOLD] = "PEON_FROM_WOOD_TO_GOLD";
	race[ORC].unitsStringIdentifier[ORC_WAIT] = "ORC_WAIT";
	race[ORC].unitsStringIdentifier[GRUNT] = "GRUNT";
	race[ORC].unitsStringIdentifier[HEADHUNTER] = "HEADHUNTER";
	race[ORC].unitsStringIdentifier[CATAPULT] = "CATAPULT";
	race[ORC].unitsStringIdentifier[RAIDER] = "RAIDER";
	race[ORC].unitsStringIdentifier[TAUREN] = "TAUREN";
	race[ORC].unitsStringIdentifier[SHAMAN] = "SHAMAN";
	race[ORC].unitsStringIdentifier[WITCH_DOCTOR] = "WITCH_DOCTOR";
	race[ORC].unitsStringIdentifier[SPIRIT_WALKER] = "SPIRIT_WALKER";
	race[ORC].unitsStringIdentifier[KODO_BEAST] = "KODO_BEAST";
	race[ORC].unitsStringIdentifier[WYVERN_RIDER] = "WYVERN_RIDER";
	race[ORC].unitsStringIdentifier[TROLL_BAT_RIDER] = "TROLL_BAT_RIDER";
	race[ORC].unitsStringIdentifier[SPIRIT_WOLF_LVL1] = "SPIRIT_WOLF_LVL1";
	race[ORC].unitsStringIdentifier[DIRE_WOLF_LVL2] = "DIRE_WOLF_LVL2";
	race[ORC].unitsStringIdentifier[SHADOW_WOLF_LVL3] = "SHADOW_WOLF_LVL3";
	race[ORC].unitsStringIdentifier[SERPENT_WARD] = "SERPENT_WARD";
	race[ORC].unitsStringIdentifier[BLADEMASTER] = "BLADEMASTER";
	race[ORC].unitsStringIdentifier[FAR_SEER] = "FAR_SEER";
	race[ORC].unitsStringIdentifier[TAUREN_CHIEFTAIN] = "TAUREN_CHIEFTAIN";
	race[ORC].unitsStringIdentifier[SHADOW_HUNTER] = "SHADOW_HUNTER";
	race[ORC].unitsStringIdentifier[BURROW] = "BURROW";
	race[ORC].unitsStringIdentifier[WAR_MILL] = "WAR_MILL";
	race[ORC].unitsStringIdentifier[GREAT_HALL] = "GREAT_HALL";
	race[ORC].unitsStringIdentifier[STRONGHOLD] = "STRONGHOLD";
	race[ORC].unitsStringIdentifier[FORTRESS] = "FORTRESS";
	race[ORC].unitsStringIdentifier[ORC_BARRACKS] = "ORC_BARRACKS";
	race[ORC].unitsStringIdentifier[ALTAR_OF_STORMS] = "ALTAR_OF_STORMS";
	race[ORC].unitsStringIdentifier[BESTIARY] = "BESTIARY";
	race[ORC].unitsStringIdentifier[SPIRIT_LODGE] = "SPIRIT_LODGE";
	race[ORC].unitsStringIdentifier[TAUREN_TOTEM] = "TAUREN_TOTEM";
	race[ORC].unitsStringIdentifier[VOODOO_LOUNGE] = "VOODOO_LOUNGE";
	race[ORC].unitsStringIdentifier[WATCH_TOWER] = "WATCH_TOWER";
	race[ORC].unitsStringIdentifier[ORC_BACKPACK] = "ORC_BACKPACK";
	race[ORC].unitsStringIdentifier[PILLAGE] = "PILLAGE";
	race[ORC].unitsStringIdentifier[BERSERKER_STRENGTH] = "BERSERKER_STRENGTH";
	race[ORC].unitsStringIdentifier[TROLL_REGENERATION] = "TROLL_REGENERATION";
	race[ORC].unitsStringIdentifier[BERSERKER] = "BERSERKER";
	race[ORC].unitsStringIdentifier[BURNING_OIL] = "BURNING_OIL";
	race[ORC].unitsStringIdentifier[REINFORCED_DEFENSE] = "REINFORCED_DEFENSE";
	race[ORC].unitsStringIdentifier[ENSNARE] = "ENSNARE";
	race[ORC].unitsStringIdentifier[WAR_DRUMS] = "WAR_DRUMS";
	race[ORC].unitsStringIdentifier[ENVENOMED_SPEARS] = "ENVENOMED_SPEARS";
	race[ORC].unitsStringIdentifier[LIQUID_FIRE] = "LIQUID_FIRE";
	race[ORC].unitsStringIdentifier[PULVERIZE] = "PULVERIZE";
	race[ORC].unitsStringIdentifier[ORC_MELEE_WEAPONS] = "ORC_MELEE_WEAPONS";
	race[ORC].unitsStringIdentifier[UNIT_ARMOR] = "UNIT_ARMOR";
	race[ORC].unitsStringIdentifier[ORC_RANGED_WEAPONS] = "ORC_RANGED_WEAPONS";
	race[ORC].unitsStringIdentifier[SPIKED_BARRICADES] = "SPIKED_BARRICADES";
	race[ORC].unitsStringIdentifier[SHAMAN_TRAINING] = "SHAMAN_TRAINING";
	race[ORC].unitsStringIdentifier[WITCH_DOCTOR_TRAINING] = "WITCH_DOCTOR_TRAINING";
	race[ORC].unitsStringIdentifier[SPIRIT_WALKER_TRAINING] = "SPIRIT_WALKER_TRAINING";
	race[ORC].unitsStringIdentifier[R_ORC_BACKPACK] = "R_ORC_BACKPACK";
	race[ORC].unitsStringIdentifier[R_PILLAGE] = "R_PILLAGE";
	race[ORC].unitsStringIdentifier[R_BERSERKER_STRENGTH] = "R_BERSERKER_STRENGTH";
	race[ORC].unitsStringIdentifier[R_TROLL_REGENERATION] = "R_TROLL_REGENERATION";
	race[ORC].unitsStringIdentifier[R_BERSERKER] = "R_BERSERKER";
	race[ORC].unitsStringIdentifier[R_BURNING_OIL] = "R_BURNING_OIL";
	race[ORC].unitsStringIdentifier[R_REINFORCED_DEFENSE] = "R_REINFORCED_DEFENSE";
	race[ORC].unitsStringIdentifier[R_ENSNARE] = "R_ENSNARE";
	race[ORC].unitsStringIdentifier[R_WAR_DRUMS] = "R_WAR_DRUMS";
	race[ORC].unitsStringIdentifier[R_ENVENOMED_SPEARS] = "R_ENVENOMED_SPEARS";
	race[ORC].unitsStringIdentifier[R_LIQUID_FIRE] = "R_LIQUID_FIRE";
	race[ORC].unitsStringIdentifier[R_PULVERIZE] = "R_PULVERIZE";
	race[ORC].unitsStringIdentifier[R_ORC_MELEE_WEAPONS] = "R_ORC_MELEE_WEAPONS";
	race[ORC].unitsStringIdentifier[R_UNIT_ARMOR] = "R_UNIT_ARMOR";
	race[ORC].unitsStringIdentifier[R_ORC_RANGED_WEAPONS] = "R_ORC_RANGED_WEAPONS";
	race[ORC].unitsStringIdentifier[R_SPIKED_BARRICADES] = "R_SPIKED_BARRICADES";
	race[ORC].unitsStringIdentifier[R_SHAMAN_TRAINING] = "R_SHAMAN_TRAINING";
	race[ORC].unitsStringIdentifier[R_WITCH_DOCTOR_TRAINING] = "R_WITCH_DOCTOR_TRAINING";
	race[ORC].unitsStringIdentifier[R_SPIRIT_WALKER_TRAINING] = "R_SPIRIT_WALKER_TRAINING";

	race[ELVES].unitsStringIdentifier[NONE] = "NONE";
	race[ELVES].unitsStringIdentifier[GOLD_MINE] = "GOLD_MINE";
	race[ELVES].unitsStringIdentifier[TREE] = "TREE";
	race[ELVES].unitsStringIdentifier[WISP] = "WISP";
	race[ELVES].unitsStringIdentifier[WOOD_WISP] = "WOOD_WISP";
	race[ELVES].unitsStringIdentifier[WISP_FROM_WOOD_TO_GOLD] = "WISP_FROM_WOOD_TO_GOLD";
	race[ELVES].unitsStringIdentifier[ELVES_WAIT] = "ELVES_WAIT";
	race[ELVES].unitsStringIdentifier[BREAK_UP_BUILDING] = "BREAK_UP_BUILDING";
	race[ELVES].unitsStringIdentifier[ARCHER] = "ARCHER";
	race[ELVES].unitsStringIdentifier[HUNTRESS] = "HUNTRESS";
	race[ELVES].unitsStringIdentifier[BALLISTA] = "BALLISTA";
	race[ELVES].unitsStringIdentifier[DRYAD] = "DRYAD";
	race[ELVES].unitsStringIdentifier[DRUID_OF_THE_CLAW] = "DRUID_OF_THE_CLAW";
	race[ELVES].unitsStringIdentifier[MOUNTAIN_GIANT] = "MOUNTAIN_GIANT";
	race[ELVES].unitsStringIdentifier[HIPPOGRYPH] = "HIPPOGRYPH";
	race[ELVES].unitsStringIdentifier[DRUID_OF_THE_THALON] = "DRUID_OF_THE_THALON";
	race[ELVES].unitsStringIdentifier[FAERIE_DRAGON] = "FAERIE_DRAGON";
	race[ELVES].unitsStringIdentifier[CHIMAERA] = "CHIMAERA";
	race[ELVES].unitsStringIdentifier[TREANT] = "TREANT";
	race[ELVES].unitsStringIdentifier[SPIRIT_OF_VENGEANCE] = "SPIRIT_OF_VENGEANCE";
	race[ELVES].unitsStringIdentifier[VENGEANCE] = "VENGEANCE";
	race[ELVES].unitsStringIdentifier[DEMON_HUNTER] = "DEMON_HUNTER";
	race[ELVES].unitsStringIdentifier[KEEPER_OF_THE_GROVE] = "KEEPER_OF_THE_GROVE";
	race[ELVES].unitsStringIdentifier[PRIESTESS_OF_THE_MOON] = "PRIESTESS_OF_THE_MOON";
	race[ELVES].unitsStringIdentifier[WARDEN] = "WARDEN";
	race[ELVES].unitsStringIdentifier[ANCIENT_OF_WAR] = "ANCIENT_OF_WAR";
	race[ELVES].unitsStringIdentifier[ANCIENT_OF_LORE] = "ANCIENT_OF_LORE";
	race[ELVES].unitsStringIdentifier[ANCIENT_OF_WIND] = "ANCIENT_OF_WIND";
	race[ELVES].unitsStringIdentifier[ANCIENT_PROTECTOR] = "ANCIENT_PROTECTOR";
	race[ELVES].unitsStringIdentifier[TREE_OF_LIFE] = "TREE_OF_LIFE";
	race[ELVES].unitsStringIdentifier[TREE_OF_AGES] = "TREE_OF_AGES";
	race[ELVES].unitsStringIdentifier[TREE_OF_ETERNITY] = "TREE_OF_ETERNITY";
	race[ELVES].unitsStringIdentifier[ANCIENT_OF_WONDERS] = "ANCIENT_OF_WONDERS";
	race[ELVES].unitsStringIdentifier[MOON_WELL] = "MOON_WELL";
	race[ELVES].unitsStringIdentifier[ALTAR_OF_ELDERS] = "ALTAR_OF_ELDERS";
	race[ELVES].unitsStringIdentifier[HUNTERS_HALL] = "HUNTERS_HALL";
	race[ELVES].unitsStringIdentifier[CHIMAERA_ROOST] = "CHIMAERA_ROOST";
	race[ELVES].unitsStringIdentifier[ELVES_BACKPACK] = "ELVES_BACKPACK";
	race[ELVES].unitsStringIdentifier[IMPROVED_BOWS] = "IMPROVED_BOWS";
	race[ELVES].unitsStringIdentifier[MARKSMANSHIP] = "MARKSMANSHIP";
	race[ELVES].unitsStringIdentifier[SENTINEL] = "SENTINEL";
	race[ELVES].unitsStringIdentifier[MOON_GLAIVE] = "MOON_GLAIVE";
	race[ELVES].unitsStringIdentifier[IMPALING_BOLT] = "IMPALING_BOLT";
	race[ELVES].unitsStringIdentifier[ULTRAVISION] = "ULTRAVISION";
	race[ELVES].unitsStringIdentifier[WELL_SPRING] = "WELL_SPRING";
	race[ELVES].unitsStringIdentifier[NATURES_BLESSING] = "NATURES_BLESSING";
	race[ELVES].unitsStringIdentifier[ABOLISH_MAGIC] = "ABOLISH_MAGIC";
	race[ELVES].unitsStringIdentifier[ENCHANTED_BEARS] = "ENCHANTED_BEARS";
	race[ELVES].unitsStringIdentifier[HARDENED_SKIN] = "HARDENED_SKIN";
	race[ELVES].unitsStringIdentifier[RESISTANT_SKIN] = "RESISTANT_SKIN";
	race[ELVES].unitsStringIdentifier[HIPPOGRYPH_TRAINING] = "HIPPOGRYPH_TRAINING";
	race[ELVES].unitsStringIdentifier[ENCHANTED_CROWS] = "ENCHANTED_CROWS";
	race[ELVES].unitsStringIdentifier[CORROSIVE_BREATH] = "CORROSIVE_BREATH";
	race[ELVES].unitsStringIdentifier[STRENGTH_OF_THE_MOON] = "STRENGTH_OF_THE_MOON";
	race[ELVES].unitsStringIdentifier[MOON_ARMOR] = "MOON_ARMOR";
	race[ELVES].unitsStringIdentifier[STRENGTH_OF_THE_WILD] = "STRENGTH_OF_THE_WILD";
	race[ELVES].unitsStringIdentifier[REINFORCED_HIDE] = "REINFORCED_HIDE";
	race[ELVES].unitsStringIdentifier[DRUID_OF_THE_CLAW_TRAINING] = "DRUID_OF_THE_CLAW_TRAINING";
	race[ELVES].unitsStringIdentifier[DRUID_OF_THE_THALON_TRAINING] = "DRUID_OF_THE_THALON_TRAINING";
	race[ELVES].unitsStringIdentifier[R_ELVES_BACKPACK] = "R_ELVES_BACKPACK";
	race[ELVES].unitsStringIdentifier[R_IMPROVED_BOWS] = "R_IMPROVED_BOWS";
	race[ELVES].unitsStringIdentifier[R_MARKSMANSHIP] = "R_MARKSMANSHIP";
	race[ELVES].unitsStringIdentifier[R_SENTINEL] = "R_SENTINEL";
	race[ELVES].unitsStringIdentifier[R_MOON_GLAIVE] = "R_MOON_GLAIVE";
	race[ELVES].unitsStringIdentifier[R_IMPALING_BOLT] = "R_IMPALING_BOLT";
	race[ELVES].unitsStringIdentifier[R_ULTRAVISION] = "R_ULTRAVISION";
	race[ELVES].unitsStringIdentifier[R_WELL_SPRING] = "R_WELL_SPRING";
	race[ELVES].unitsStringIdentifier[R_NATURES_BLESSING] = "R_NATURES_BLESSING";
	race[ELVES].unitsStringIdentifier[R_ABOLISH_MAGIC] = "R_ABOLISH_MAGIC";
	race[ELVES].unitsStringIdentifier[R_ENCHANTED_BEARS] = "R_ENCHANTED_BEARS";
	race[ELVES].unitsStringIdentifier[R_HARDENED_SKIN] = "R_HARDENED_SKIN";
	race[ELVES].unitsStringIdentifier[R_RESISTANT_SKIN] = "R_RESISTANT_SKIN";
	race[ELVES].unitsStringIdentifier[R_HIPPOGRYPH_TRAINING] = "R_HIPPOGRYPH_TRAINING";
	race[ELVES].unitsStringIdentifier[R_ENCHANTED_CROWS] = "R_ENCHANTED_CROWS";
	race[ELVES].unitsStringIdentifier[R_CORROSIVE_BREATH] = "R_CORROSIVE_BREATH";
	race[ELVES].unitsStringIdentifier[R_STRENGTH_OF_THE_MOON] = "R_STRENGTH_OF_THE_MOON";
	race[ELVES].unitsStringIdentifier[R_MOON_ARMOR] = "R_MOON_ARMOR";
	race[ELVES].unitsStringIdentifier[R_STRENGTH_OF_THE_WILD] = "R_STRENGTH_OF_THE_WILD";
	race[ELVES].unitsStringIdentifier[R_REINFORCED_HIDE] = "R_REINFORCED_HIDE";
	race[ELVES].unitsStringIdentifier[R_DRUID_OF_THE_CLAW_TRAINING] = "R_DRUID_OF_THE_CLAW_TRAINING";
	race[ELVES].unitsStringIdentifier[R_DRUID_OF_THE_THALON_TRAINING] = "R_DRUID_OF_THE_THALON_TRAINING";

	race[UNDEAD].unitsStringIdentifier[NONE] = "NONE";
	race[UNDEAD].unitsStringIdentifier[GOLD_MINE] = "GOLD_MINE";
	race[UNDEAD].unitsStringIdentifier[TREE] = "TREE";
	race[UNDEAD].unitsStringIdentifier[ACOLYTE] = "ACOLYTE";
	race[UNDEAD].unitsStringIdentifier[UNSUMMON_BUILDING] = "UNSUMMON_BUILDING";
	race[UNDEAD].unitsStringIdentifier[UNDEAD_WAIT] = "UNDEAD_WAIT";
	race[UNDEAD].unitsStringIdentifier[GHOUL] = "GHOUL";
	race[UNDEAD].unitsStringIdentifier[CRYPT_FIEND] = "CRYPT_FIEND";
	race[UNDEAD].unitsStringIdentifier[GARGOYLE] = "GARGOYLE";
	race[UNDEAD].unitsStringIdentifier[ABOMINATION] = "ABOMINATION";
	race[UNDEAD].unitsStringIdentifier[MEAT_WAGON] = "MEAT_WAGON";
	race[UNDEAD].unitsStringIdentifier[NECROMANCER] = "NECROMANCER";
	race[UNDEAD].unitsStringIdentifier[BANSHEE] = "BANSHEE";
	race[UNDEAD].unitsStringIdentifier[FROST_WYRM] = "FROST_WYRM";
	race[UNDEAD].unitsStringIdentifier[SHADE] = "SHADE";
	race[UNDEAD].unitsStringIdentifier[SKELETON_WARRIOR] = "SKELETON_WARRIOR";
	race[UNDEAD].unitsStringIdentifier[SKELETAL_MAGE] = "SKELETAL_MAGE";
	race[UNDEAD].unitsStringIdentifier[INFERNAL] = "INFERNAL";
	race[UNDEAD].unitsStringIdentifier[CARRION_BEETLE_LVL1] = "CARRION_BEETLE_LVL1";
	race[UNDEAD].unitsStringIdentifier[CARRION_BEETLE_LVL2] = "CARRION_BEETLE_LVL2";
	race[UNDEAD].unitsStringIdentifier[CARRION_BEETLE_LVL3] = "CARRION_BEETLE_LVL3";
	race[UNDEAD].unitsStringIdentifier[OBSIDIAN_STATUE] = "OBSIDIAN_STATUE";
	race[UNDEAD].unitsStringIdentifier[DEATH_KNIGHT] = "DEATH_KNIGHT";
	race[UNDEAD].unitsStringIdentifier[DREAD_LORD] = "DREAD_LORD";
	race[UNDEAD].unitsStringIdentifier[LICH] = "LICH";
	race[UNDEAD].unitsStringIdentifier[CRYPT_LORD] = "CRYPT_LORD";
	race[UNDEAD].unitsStringIdentifier[HAUNTED_GOLD_MINE] = "HAUNTED_GOLD_MINE";
	race[UNDEAD].unitsStringIdentifier[NECROPOLIS] = "NECROPOLIS";
	race[UNDEAD].unitsStringIdentifier[HALLS_OF_THE_DEAD] = "HALLS_OF_THE_DEAD";
	race[UNDEAD].unitsStringIdentifier[BLACK_CITADEL] = "BLACK_CITADEL";
	race[UNDEAD].unitsStringIdentifier[CRYPT] = "CRYPT";
	race[UNDEAD].unitsStringIdentifier[ZIGGURAT] = "ZIGGURAT";
	race[UNDEAD].unitsStringIdentifier[ALTAR_OF_DARKNESS] = "ALTAR_OF_DARKNESS";
	race[UNDEAD].unitsStringIdentifier[GRAVEYARD] = "GRAVEYARD";
	race[UNDEAD].unitsStringIdentifier[SLAUGHTERHOUSE] = "SLAUGHTERHOUSE";
	race[UNDEAD].unitsStringIdentifier[TEMPLE_OF_THE_DAMNED] = "TEMPLE_OF_THE_DAMNED";
	race[UNDEAD].unitsStringIdentifier[SACRIFICIAL_PIT] = "SACRIFICIAL_PIT";
	race[UNDEAD].unitsStringIdentifier[BONEYARD] = "BONEYARD";
	race[UNDEAD].unitsStringIdentifier[TOMB_OF_RELICS] = "TOMB_OF_RELICS";
	race[UNDEAD].unitsStringIdentifier[NERUBIAN_TOWER] = "NERUBIAN_TOWER";
	race[UNDEAD].unitsStringIdentifier[SPIRIT_TOWER] = "SPIRIT_TOWER";
	race[UNDEAD].unitsStringIdentifier[UNDEAD_BACKPACK] = "UNDEAD_BACKPACK";
	race[UNDEAD].unitsStringIdentifier[CANNIBALIZE] = "CANNIBALIZE";
	race[UNDEAD].unitsStringIdentifier[GHOUL_FRENZY] = "GHOUL_FRENZY";
	race[UNDEAD].unitsStringIdentifier[WEB] = "WEB";
	race[UNDEAD].unitsStringIdentifier[BURROW_UNDEAD] = "BURROW_UNDEAD";
	race[UNDEAD].unitsStringIdentifier[STONE_FORM] = "STONE_FORM";
	race[UNDEAD].unitsStringIdentifier[DISEASE_CLOUD] = "DISEASE_CLOUD";
	race[UNDEAD].unitsStringIdentifier[EXHUME_CORPSES] = "EXHUME_CORPSES";
	race[UNDEAD].unitsStringIdentifier[DESTROYER] = "DESTROYER";
	race[UNDEAD].unitsStringIdentifier[SKELETAL_LONGEVITY] = "SKELETAL_LONGEVITY";
	race[UNDEAD].unitsStringIdentifier[SKELETAL_MASTERY] = "SKELETAL_MASTERY";
	race[UNDEAD].unitsStringIdentifier[FREEZING_BREATH] = "FREEZING_BREATH";
	race[UNDEAD].unitsStringIdentifier[UNHOLY_STRENGTH] = "UNHOLY_STRENGTH";
	race[UNDEAD].unitsStringIdentifier[UNHOLY_ARMOR] = "UNHOLY_ARMOR";
	race[UNDEAD].unitsStringIdentifier[CREATURE_ATTACK] = "CREATURE_ATTACK";
	race[UNDEAD].unitsStringIdentifier[CREATURE_CARAPACE] = "CREATURE_CARAPACE";
	race[UNDEAD].unitsStringIdentifier[NECROMANCER_TRAINING] = "NECROMANCER_TRAINING";
	race[UNDEAD].unitsStringIdentifier[BANSHEE_TRAINING] = "BANSHEE_TRAINING";
	race[UNDEAD].unitsStringIdentifier[R_UNDEAD_BACKPACK] = "R_UNDEAD_BACKPACK";
	race[UNDEAD].unitsStringIdentifier[R_CANNIBALIZE] = "R_CANNIBALIZE";
	race[UNDEAD].unitsStringIdentifier[R_GHOUL_FRENZY] = "R_GHOUL_FRENZY";
	race[UNDEAD].unitsStringIdentifier[R_WEB] = "R_WEB";
	race[UNDEAD].unitsStringIdentifier[R_BURROW_UNDEAD] = "R_BURROW_UNDEAD";
	race[UNDEAD].unitsStringIdentifier[R_STONE_FORM] = "R_STONE_FORM";
	race[UNDEAD].unitsStringIdentifier[R_DISEASE_CLOUD] = "R_DISEASE_CLOUD";
	race[UNDEAD].unitsStringIdentifier[R_EXHUME_CORPSES] = "R_EXHUME_CORPSES";
	race[UNDEAD].unitsStringIdentifier[R_DESTROYER] = "R_DESTROYER";
	race[UNDEAD].unitsStringIdentifier[R_SKELETAL_LONGEVITY] = "R_SKELETAL_LONGEVITY";
	race[UNDEAD].unitsStringIdentifier[R_SKELETAL_MASTERY] = "R_SKELETAL_MASTERY";
	race[UNDEAD].unitsStringIdentifier[R_FREEZING_BREATH] = "R_FREEZING_BREATH";
	race[UNDEAD].unitsStringIdentifier[R_UNHOLY_STRENGTH] = "R_UNHOLY_STRENGTH";
	race[UNDEAD].unitsStringIdentifier[R_UNHOLY_ARMOR] = "R_UNHOLY_ARMOR";
	race[UNDEAD].unitsStringIdentifier[R_CREATURE_ATTACK] = "R_CREATURE_ATTACK";
	race[UNDEAD].unitsStringIdentifier[R_CREATURE_CARAPACE] = "R_CREATURE_CARAPACE";
	race[UNDEAD].unitsStringIdentifier[R_NECROMANCER_TRAINING] = "R_NECROMANCER_TRAINING";
	race[UNDEAD].unitsStringIdentifier[R_BANSHEE_TRAINING] = "R_BANSHEE_TRAINING";

	GAME::init();
}

