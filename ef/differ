diff -r ./bodiagram.cpp /home/claw/work/sc1061/sc/ef/bodiagram.cpp
53,57d52
< void BoDiagramWindow::assignAnarace(ANARACE* bod_anarace)
< {
< 	anarace = bod_anarace;
< }
< 
439,440d433
< 				 dc->SetTextForeground(*theme.lookUpColor(BRIGHT_FITNESS_TEXT_COLOR));
< 				 
diff -r ./bodiagram.hpp /home/claw/work/sc1061/sc/ef/bodiagram.hpp
19,20d18
< 		void assignAnarace(ANARACE* bod_anarace);
< 
Files ./bodiagram.o and /home/claw/work/sc1061/sc/ef/bodiagram.o differ
diff -r ./bograph.cpp /home/claw/work/sc1061/sc/ef/bograph.cpp
93,97d92
< void BoGraphWindow::assignAnarace(ANARACE* bograph_anarace)
< {
< 	anarace = bograph_anarace;
< }
< 
diff -r ./bograph.hpp /home/claw/work/sc1061/sc/ef/bograph.hpp
49,50c49
< 	    	void mouseHasMoved();
< 		void assignAnarace(ANARACE* bograph_anarace);
---
> 		void mouseHasMoved();
Files ./bograph.o and /home/claw/work/sc1061/sc/ef/bograph.o differ
diff -r ./bowindow.cpp /home/claw/work/sc1061/sc/ef/bowindow.cpp
133,137d132
< void BoWindow::assignAnarace(ANARACE* bo_anarace)
< {
< 	anarace = bo_anarace;
< }
< 
diff -r ./bowindow.hpp /home/claw/work/sc1061/sc/ef/bowindow.hpp
12c12
< 	public:
---
>     public:
15,17c15,17
< 		BoEntry(UI_Object* bo_parent, Rect bo_rect, Rect bo_max_rect, const string& bo_unit);
< 		~BoEntry();
< 		const unsigned int changed();
---
>         BoEntry(UI_Object* bo_parent, Rect bo_rect, Rect bo_max_rect, const string& bo_unit);
>         ~BoEntry();
>         const unsigned int changed();
20c20
< 	private:
---
>     private:
27c27
< class BoWindow : public UI_Window
---
> class BoWindow:public UI_Window
43d42
< 		void assignAnarace(ANARACE* bo_anarace);
46c45
< 		BoEntry* boEntry[MAX_LENGTH];
---
>         BoEntry* boEntry[MAX_LENGTH];
Files ./bowindow.o and /home/claw/work/sc1061/sc/ef/bowindow.o differ
Only in /home/claw/work/sc1061/sc/ef/: corewindow.o
Only in ./: differ
diff -r ./force.cpp /home/claw/work/sc1061/sc/ef/force.cpp
6,9d5
< 	addUnit(0),
< 	addTime(0),
< 	addLocation(0),
< 	addCount(0),
18d13
< 	movedForceEntry(NULL),
24,25c19,20
< 	raceMenu(new RaceMenu(this, Rect(10, 10, getWidth()-200, 0))), // TODO
< 	locationMenu(new LocationMenu(this, anarace, getRelativeClientRect()))
---
> //	forceMenu(new ForceMenu(this, anarace, Rect(10, 10, getWidth()-200, 0))), TODO in map tab verschieben
> 	raceMenu(new RaceMenu(this, Rect(10, 10, getWidth()-200, 0))) // TODO
27a23
> 	
30a27,28
> //	menuButton[FORCE_MENU] = new UI_Button(this, Rect(getRelativeClientRectPosition()+Point(0,10), getClientRectSize()), Rect(Point(0,0),getSize()), STARTFORCE_STRING, MY_BUTTON, HORIZONTALLY_CENTERED_TEXT_MODE, STATIC_BUTTON_MODE, ARRANGE_TOP_LEFT, SMALL_NORMAL_BOLD_FONT, AUTO_SIZE);
> 
33a32
> //	menuButton[FORCE_MENU]->updateToolTip(CHOOSE_STARTING_FORCE_TOOLTIP_STRING);
37a37
> //	forceMenu->Hide();
42,49d41
< 
< 
< 	for (unsigned int j = 0; j < 2; j++)	
< 		for (unsigned int loc = 0; loc < MAX_LOCATIONS; loc++)
< 		{
< 			locationName[j][loc] = new UI_StaticText(this, (*anarace->getMap())->getLocation(loc)->getName(), Rect(getRelativeClientRectPosition()+Point(0,20), getClientRectSize()), FORCE_TEXT_COLOR, SMALL_NORMAL_BOLD_FONT);
< 			locationName[j][loc]->Hide();
< 		}
53a46
> 
55a49
> 	
63,65d56
< 	for(int j = 0; j < 2; j++)
< 		for(int i=MAX_LOCATIONS;i--;)
< 			delete locationName[j][i];
68a60
> //	delete forceMenu;
72,80d63
< 	delete locationMenu;
< }
< 
< void ForceWindow::assignAnarace(ANARACE* force_anarace)
< {
< 	anarace = force_anarace;
< 	unitMenu->assignAnarace(anarace);
< 	goalMenu->assignAnarace(anarace);
< 	locationMenu->assignAnarace(anarace);
86a70
> //	forceMenu->close();
88c72,91
< 	locationMenu->close();
---
> }
> 
> void ForceWindow::setMarkedUnit(const unsigned int marked_unit)
> {
> #ifdef _SCC_DEBUG
>     if(marked_unit >= UNIT_TYPE_COUNT) {
>         toLog("DEBUG: (ForceWindow::setMarkedUnit): Value marked_unit out of range.");return;
>     }
> #endif
> 	markedUnit = marked_unit;
> }
> 	
> const unsigned int ForceWindow::getMarkedUnit() const
> {
> #ifdef _SCC_DEBUG
>     if(markedUnit >= UNIT_TYPE_COUNT) {
>         toLog("DEBUG: (ForceWindow::getMarkedUnit): Value markedUnit out of range.");return(0);
>     }
> #endif
> 	return (markedUnit);
93c96
< //	if(!isShown())
---
> 	if(!isShown())
102,105c105,108
< 	addUnit = 0;
< 	addTime = 0;
< 	addLocation = 0;
< 	addCount = 0;
---
> 	int addUnit = 0;
> 	int addTime = 0;
> 	int addLocation = 0;
> 	int addCount = 0;
107a111
> //	int assignForce = -1;
110,113c114
< // ------ TRANSLATE THE CHOSEN MENU ITEM
< 	currentGoalUnit = unitMenu->getMarkedItem()+1;
< 	if((!unitMenu->secondLevel())&&(currentGoalUnit==2))
< 		currentGoalUnit=GAS_SCV;
---
> 	currentGoalUnit = unitMenu->getMarkedItem();
115d115
< // ------ CREATE EDITBOX FOR SAVING BUILD ORDER
119d118
< // ------ PROCESS TEXT BOX
132,133c131,132
< 				settings.saveGoal(editTextField->getString(), *anarace->getCurrentGoal());
< 				msgWindow->addMessage(UI_Object::theme.lookUpFormattedString(SAVED_GOAL_STRING, (*anarace->getCurrentGoal())->getName()));
---
> 		        settings.saveGoal(editTextField->getString(), *anarace->getCurrentGoal());
> 	        	msgWindow->addMessage(UI_Object::theme.lookUpFormattedString(SAVED_GOAL_STRING, (*anarace->getCurrentGoal())->getName()));
140,141c139
< 
< // ------ CHECK FOR PRESSED UNIT ITEM
---
> 	
148a147
> 			{
149a149
> 				{
154a155,156
> 				}
> 			}
171a174,180
> /*	if(forceMenu->getPressedItem()>=0)
> 	{
> 		assignForce = forceMenu->getPressedItem();
> 		menuRadio->forceUnpressAll();
> 		menuButton[FORCE_MENU]->forceUnpress();
> 	} TODO in maptab verschieben */
> 
176c185
< 		menuButton[RACE_MENU]->forceUnpress();
---
>     	menuButton[RACE_MENU]->forceUnpress();
179d187
< // ------ OPEN/CLOSE MENUES
180a189
> 	{
187,197c196,205
< 				raceMenu->open();
< 			   	if(!raceMenu->isOpen()) 
< 				{
< 					menuRadio->forceUnpressAll();
< 					closeMenus();
< 				} else 
< 				{
< 					closeMenus();
< 					raceMenu->open();
< 				}
< 			}break;
---
>                 raceMenu->open();
>                	if(!raceMenu->isOpen()) {
> 		            menuRadio->forceUnpressAll();
>                     closeMenus();
>                 } else {
>                     closeMenus();
>                     raceMenu->open();
>                 }
> 			}
> 			break;
200a209,213
> 			// unit menu has a menu depth of 2!
> 			// thus a repeated press on the menu item will not cause the item to flip back
> //				bool maybePushAgain=false;
> //				if(unitMenu->isOpen()) 
> //					maybePushAgain=true;
202,213c215,226
< 				unitMenu->open();
< 				if(!unitMenu->isOpen()) 
< 				{
< 					menuRadio->forceUnpressAll();
< 					closeMenus();
< 				} else 
< 				{
< 					menuButton[UNIT_MENU]->forcePress();
< 					closeMenus();
< 					unitMenu->open();
< 				}
< 			}break;
---
>                 unitMenu->open();
>                 if(!unitMenu->isOpen()) {
>                     menuRadio->forceUnpressAll();
>                     closeMenus();
>                 } else {
> //					if(maybePushAgain)
> //						menuRadio->forcePress(UNIT_MENU);
>                     closeMenus();
>                     unitMenu->open();
>                 }
> 			}
>             break;
217,220c230,232
< 				goalMenu->Show();
< 				goalMenu->open();
< 				if(!goalMenu->isOpen()) 
< 				{
---
> 					goalMenu->Show();
> 					goalMenu->open();
> 				if(!goalMenu->isOpen()) {
223,224c235
< 				} else 
< 				{
---
> 				} else {
230a242,254
> /*			case FORCE_MENU:
> 			{
> 				forceMenu->Show();
> 				forceMenu->open();
> 				if(!forceMenu->isOpen()) {
> 					menuRadio->forceUnpressAll();
> 					closeMenus();
> 				} else {
> 					closeMenus();
> 					forceMenu->open();
> 				}
> 			}
> 			break;*/
232c256,257
< 		} // end of menuRadio has changed
---
> 		}
> 	} // end of menuRadio has changed
235,237c260,261
< // ------ CLOSE MENUES IF MOUSE HAS LEFT FORCE WINDOW	
< 	if(!isMouseInside()) 
< 	{
---
> 	
> 	if(!isMouseInside()) {
242c266,270
< //resetData(); // TODO
---
> //	if((addUnit->isCurrentlyHighlighted()||subUnit->isCurrentlyHighlighted()||cancelUnit->isCurrentlyHighlighted()))
> //	{
> //		forceEntry[markedUnit]->forceHighlighted();
> //		while(true);
> //	}
244,247c272
< // ------------------- GOALS ----------------------------
< 
< 
< // ------ START WHERE THE MENUES END
---
> // ------------------- GOALS
254a280,281
> //	if(forceMenu->getHeight() > startLine)
> //		startLine = forceMenu->getHeight();
257a285,286
> 
> 	goals->setFreeMove();
258a288
> 	legend->setFreeMove();
260,267d289
< 	line++;
< 
< 
< 
< 
< 
< 
< 
268a291
> 	line++;
269a293
>     std::list<ForceEntry*>::iterator forceEntry = forceList.begin();
271,275d294
< 	std::list<ForceEntry*>::iterator forceEntry = forceList.begin();
< /*	unsigned int current_location = 99;
< 	for(int i = MAX_LOCATIONS;i--;)
< 		locationName[0][i]->Hide();*/
< 	bool menuIsOpen=false;
278,285d296
< /*		if(i->getLocation()!=current_location)
< 		{
< 			current_location = i->getLocation();
< 			locationName[0][current_location]->Show();
< 			locationName[0][current_location]->adjustRelativeRect(Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)-getScrollY()), Size(getClientRectWidth(), FONT_SIZE+5)));
< 			line++;
< 		}*/
< 	
293c304,305
< 		Rect edge = Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)-getScrollY()), Size((*forceEntry)->getWidth(), FONT_SIZE+6));
---
> 		Rect edge = Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)-getScrollY()), 
> 						Size((*forceEntry)->getWidth(), FONT_SIZE+6));
303a316
> 				{
304a318
> 					{
309a324,325
> 					}
> 				}
326a343
> 					{
327a345
> 						{
332a351,352
> 						}
> 					}
342,351d361
< /*		if((*forceEntry)->isLocationGoalClicked())
< 		{
< 			locationMenu->setParent(*forceEntry);
< 			locationMenu->open();
< 			menuIsOpen=true;
< 		}
< 	
< 		if((locationMenu->isOpen()) && (locationMenu->getParent() == *forceEntry))
< 			line+=locationMenu->getHeight();
< 		else*/
355,358d364
< //	if(!menuIsOpen)
< //		locationMenu->close();
< 	movedForceEntry = NULL;
< 	nongoals->adjustRelativeRect(Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)), Size(getClientRectWidth(), FONT_SIZE+5)));
359a366
> 	nongoals->adjustRelativeRect(Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)), Size(getClientRectWidth(), FONT_SIZE+5)));
362,412c369,376
< 	bool checkedUnits[GAS_SCV+1];
< 	for(int i=GAS_SCV+1;i--;)
< 		checkedUnits[i]=false;
< 	int loc=0;
< /*	for (unsigned int loc = 1; loc < MAX_LOCATIONS; loc++)
< 	{
< 		bool unitsthere = false;
< 		for (unsigned int i = GAS_SCV+1; i--;)
< 			if (((*anarace->getCurrentGoal())->getIsHaveable(i))&&(anarace->getLocationTotal(loc, i)))
< 				unitsthere=true;
< 		if(!unitsthere)
< 		{
< 			locationName[1][loc]->Hide();
< 			continue;
< 		}
< 		locationName[1][loc]->Show();
< 		locationName[1][loc]->adjustRelativeRect(Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)-getScrollY()), Size(getClientRectWidth(), FONT_SIZE+5)));
< 		line++;*/
< 
<                 while(forceEntry!=forceList.end())
<                 {
< //			if (((*anarace->getCurrentGoal())->getIsHaveable(i)))//&&(anarace->getLocationTotal(loc, i)))
< 			{
< //				checkedUnits[i]=true;
< 				(*forceEntry)->setTargetForce(anarace->getLocationTotal(loc, (*forceEntry)->getUnit()) * getClientRectWidth() / (3*anarace->getNonGoalsUnitsTotalMax()));
< 				(*forceEntry)->setTotalNumber(anarace->getLocationTotal(loc, (*forceEntry)->getUnit()));
< 				Rect edge = Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)-getScrollY()), 
< 							Size((*forceEntry)->getWidth(), FONT_SIZE+6));
< 				(*forceEntry)->setFreeMove();
< 				(*forceEntry)->adjustRelativeRect(edge);
< 
< 				if((*forceEntry)->isLeftClicked())
< 				{
< 					addUnit = (*forceEntry)->getUnit();	addCount = 1; addTime = 0;	addLocation = 0;
< 					msgWindow->addMessage(UI_Object::theme.lookUpFormattedString(MOVED_NON_GOAL_STRING, *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+(*forceEntry)->getUnit()+UNIT_NULL_STRING))));
< 					movedForceEntry=*forceEntry;
< 				}
< 				fitItemToRelativeClientRect(edge, 1);
< 				line++;
< 				forceEntry++;
< 			} // goal > 0*/
<                 }
< 	
< /*		for (unsigned int i = GAS_SCV+1; i--;)
< //			if (((*anarace->getCurrentGoal())->getAllGoal(i) == 0) && (((*anarace->getCurrentGoal())->getIsBuildable(i))|| ( anarace->getLocationTotal(0,i))))
< 			if (((*anarace->getCurrentGoal())->getIsHaveable(i)))//&&(anarace->getLocationTotal(loc, i)))
< 			{
< 				checkedUnits[i]=true;
< 				(*forceEntry)->setTargetForce(anarace->getLocationTotal(loc, i) * getClientRectWidth() / (3*anarace->getNonGoalsUnitsTotalMax()));
< 				(*forceEntry)->setTotalNumber(anarace->getLocationTotal(loc, i));
< 				Rect edge = Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)-getScrollY()), 
---
> 	for (unsigned int i = 0; i <= GAS_SCV; i++)
> //		if (((*anarace->getCurrentGoal())->getAllGoal(i) == 0) && (((*anarace->getCurrentGoal())->getIsBuildable(i))|| ( anarace->getLocationTotal(0,i))))
> 		if ((*anarace->getCurrentGoal())->getIsHaveable(i))
> 		{
> 			(*forceEntry)->setTargetForce(anarace->getLocationTotal(GLOBAL, i) * getClientRectWidth() / (3*anarace->getNonGoalsUnitsTotalMax()));
> 			(*forceEntry)->setTotalNumber(anarace->getLocationTotal(GLOBAL, i));
> 		
> 			Rect edge = Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)-getScrollY()), 
414,415c378,379
< 				(*forceEntry)->setFreeMove();
< 				(*forceEntry)->adjustRelativeRect(edge);
---
> 			(*forceEntry)->setFreeMove();
> 			(*forceEntry)->adjustRelativeRect(edge);
417,454c381,386
< 				if((*forceEntry)->isLeftClicked())
< 				{
< 					addUnit = i;	addCount = 1; addTime = 0;	addLocation = 0;
< 					msgWindow->addMessage(UI_Object::theme.lookUpFormattedString(MOVED_NON_GOAL_STRING, *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i+UNIT_NULL_STRING))));
< 					movedForceEntry=*forceEntry;
< 				}
< 				fitItemToRelativeClientRect(edge, 1);
< 				line++;
< 				forceEntry++;
< 			} // goal > 0*/
< /*	}
< 	for(int loc=0;loc<1;loc++)
< 	{
< 		bool unitsthere = false;
< 		for (unsigned int i = GAS_SCV+1; i--;)
< 			if (((*anarace->getCurrentGoal())->getIsHaveable(i))&&(anarace->getLocationTotal(loc, i)))
< 				unitsthere=true;
< 		if(!unitsthere)
< 		{
< 			locationName[1][loc]->Hide();
< 			continue;
< 		}
< 		locationName[1][loc]->Show();
< 		locationName[1][loc]->adjustRelativeRect(Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)-getScrollY()), Size(getClientRectWidth(), FONT_SIZE+5)))
< ;
< 		line++;
< 
< 		for (unsigned int i = GAS_SCV+1; i--;)
< //			if (((*anarace->getCurrentGoal())->getAllGoal(i) == 0) && (((*anarace->getCurrentGoal())->getIsBuildable(i))|| ( anarace->getLocationTotal(0,i))))
< 			if (((*anarace->getCurrentGoal())->getIsHaveable(i))&&(anarace->getLocationTotal(loc, i))&&(!checkedUnits[i]))
< 			{
< 				checkedUnits[i]=true;
< 				(*forceEntry)->setTargetForce(anarace->getLocationTotal(loc, i) * getClientRectWidth() / (3*anarace->getNonGoalsUnitsTotalMax()));
< 				(*forceEntry)->setTotalNumber(anarace->getLocationTotal(loc, i));
< 				Rect edge = Rect(getRelativeClientRectPosition() + Point(0, line * (FONT_SIZE+7) + startLine*(FONT_SIZE+9)-getScrollY()),
< 				Size((*forceEntry)->getWidth(), FONT_SIZE+6));
< 				(*forceEntry)->setFreeMove();
< 				(*forceEntry)->adjustRelativeRect(edge);
---
> 			if((*forceEntry)->isLeftClicked())
> 			{
> 				addUnit = i;	addCount = 1; addTime = 0;	addLocation = 0;
> 				msgWindow->addMessage(UI_Object::theme.lookUpFormattedString(MOVED_NON_GOAL_STRING, *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i+UNIT_NULL_STRING))));
> 			}
> 			fitItemToRelativeClientRect(edge, 1);
456,468c388,396
< 				if((*forceEntry)->isLeftClicked())
< 				{
< 					addUnit = i;
< 					addCount = 1;
< 					addTime = 0;
< 					addLocation = 0;
< 					msgWindow->addMessage(UI_Object::theme.lookUpFormattedString(MOVED_NON_GOAL_STRING, *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i+UNIT_NULL_STRING))));
< 				}
< 				fitItemToRelativeClientRect(edge, 1);
< 				line++;
< 				forceEntry++;
< 			} // goal > 0
< 	}*/
---
> 			line++;
> 			forceEntry++;
> 		} // goal > 0
> //		else if((*anarace->getCurrentGoal())->getAllGoal(i) == 0)
> //		{
> //			forceEntry[j]->HideIt();
> //			forceEntry[j]->adjustRelativeRect(Rect(getRelativeClientRectPosition()+Point(0,0), Size(getClientRectWidth(),FONT_SIZE+10)));
> //			j++;
> //		}
485a414,422
> /*	if(assignForce>=0)
> 	{
> 		settings.assignStartcondition(anarace->getPlayerNumber(), forceMenu->getPressedItem());
> 		settings.fillGroups();
> 		setChangedFlag();
>     //  ostringstream os; TODO
> //      os << "Set " << settings.getStartcondition(anarace->getPlayerNumber(), fo)->getName() << " as starting force.";
>   //    msgWindow->addMessage(os.str())
> 	} TODO in Map-Tab verschieben*/
504c441
< 	if(getChangedFlag())
---
> /*	if(getChangedFlag())
506c443
< 		(*anarace->getCurrentGoal())->adjustGoals(true, (*anarace->getStartCondition())->getUnit(0) );
---
> //		(*anarace->getCurrentGoal())->adjustGoals(true, (*anarace->getStartCondition())->getUnit(0) );
508,515c445,448
< 	}
< 
< 	if(unitMenu->secondLevel())
< 		menuButton[UNIT_MENU]->updateText(BACK_STRING);
< 	else if(unitMenu->isOpen())
< 		menuButton[UNIT_MENU]->updateText(CLOSE_STRING);
< 	else	
< 		menuButton[UNIT_MENU]->updateText(ADD_GOAL_STRING);
---
> //		unitMenu->resetData(); CHANGED
> 	}*/
> 	
> 	
525c458
< 	for(std::list<GOAL>::iterator i = (*anarace->getCurrentGoal())->goal.begin(); i!= (*anarace->getCurrentGoal())->goal.end(); ++i)
---
>     for(std::list<GOAL>::iterator i = (*anarace->getCurrentGoal())->goal.begin(); i!= (*anarace->getCurrentGoal())->goal.end(); ++i)
531c464
< 					Rect(getRelativeClientRectPosition(), getClientRectSize()+Size(0, getMaxRect().GetHeight())),"");
---
> 			        Rect(getRelativeClientRectPosition(), getClientRectSize()+Size(0, getMaxRect().GetHeight())),"");
534,541d466
< 	
< 			forceEntry->setUnit(i->getUnit());
< 			forceEntry->setType(stats[anarace->getRace()][i->getUnit()].unitType);
< 			forceEntry->updateText("   " + *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i->getUnit()+UNIT_NULL_STRING)));
< 			forceEntry->assignGoal(&*i);
< 			n++;
< 		
< //		} else if((*j)->getUnit()!=i->getUnit()) // todo time, location mit goal vergleichen (-> dazugefuegt!) oder mit addunit/addlocation etc. vergleichen (-> weggetan!)
543,587d467
< 		if((movedForceEntry!=NULL)&&(movedForceEntry->getUnit()==i->getUnit()))
< 		{
< 			forceList.insert(j, movedForceEntry);
< 			for(std::list<ForceEntry*>::iterator k = forceList.begin();k!=forceList.end();k++)
< 				if(*k == movedForceEntry)
< 				{
< 					forceList.erase(k);
< 					break;
< 				}
< 			movedForceEntry=NULL;
< 			n++;
< 		} else
< 		if((addCount<0)&&((*j)->getUnit()!=i->getUnit())&&(addUnit == (*j)->getUnit())) // => WAS DELETED 
< 		{
< 			if(!(*anarace->getCurrentGoal())->getIsBuildable((*j)->getUnit())) // => WAS DELETED COMPLETELY (not moved to non-goals list), SO DELETE THE ENTRY!
< 			{
< 				delete(*j);
< 				j=forceList.erase(j);
< 				size--;
< 				UI_Object::currentButton=NULL;
< 			}
< 			else
< 			{
< 				forceList.push_back(*j);
< 				j=forceList.erase(j);				
< 			}
< 		} else if((*j)->getUnit()!=i->getUnit()) // new one!
< 		{
< 			forceEntry = new ForceEntry(this, Rect(getRelativeClientRectPosition()+Point(0,0), Size(getClientRectWidth(), FONT_SIZE+6)),
< 			Rect(getRelativeClientRectPosition(), getClientRectSize()+Size(0, getMaxRect().GetHeight())),"");
< 			forceList.insert(j, forceEntry);
< 			size++;
< 	
< 			forceEntry->setUnit(i->getUnit());
< 			forceEntry->setType(stats[anarace->getRace()][i->getUnit()].unitType);
< 			forceEntry->updateText("   " + *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i->getUnit()+UNIT_NULL_STRING)));
< 			forceEntry->assignGoal(&*i);
< 			n++;
< 		}
< 		else if((*j)->getUnit()==i->getUnit()) // TODO TIME
< 		{
< 			j++; // ok, ignore
< 			n++;
< 		}
< 		else
591,596d470
< 
< 			forceEntry->setUnit(i->getUnit());
< 			forceEntry->setType(stats[anarace->getRace()][i->getUnit()].unitType);
< 			forceEntry->updateText("   " + *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i->getUnit()+UNIT_NULL_STRING)));
< 			forceEntry->assignGoal(&*i);
< 			n++;
598a473,478
> 		forceEntry->setUnit(i->getUnit());
> 		forceEntry->setType(stats[anarace->getRace()][i->getUnit()].unitType);
> 		forceEntry->updateText("   " + *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i->getUnit()+UNIT_NULL_STRING)));
> 		forceEntry->assignGoal(&*i);
> 
> 		n++;
605,631c485,490
< 	bool checkedUnits[GAS_SCV+1];
< 	for(int i=GAS_SCV+1;i--;)
< 		checkedUnits[i]=false;
< 
< 	int loc=0;
< 
< /*	for (unsigned int loc = 1; loc < MAX_LOCATIONS; loc++)
< 	{
< 		bool unitsthere = false;
< 		for (unsigned int i = GAS_SCV+1; i--;)
< 			if (((*anarace->getCurrentGoal())->getIsHaveable(i))&&(anarace->getLocationTotal(loc, i)))
< 				unitsthere=true;
< 		if(!unitsthere)
< 		{
< 			locationName[1][loc]->Hide();
< 			continue;
< 		}	   */
< 
< 		std::list<ForceEntry*>::iterator k = j;
< 	        while(k!=forceList.end())
< 		{
< 			if((*anarace->getCurrentGoal())->getIsHaveable((*k)->getUnit()))
< 			{
< 				checkedUnits[(*k)->getUnit()]=true;
< 				n++;
< 				j++;
< 			}
---
> 	int k = 0;
>     for (unsigned int i = 0; i <= GAS_SCV; i++)
> //        if ( ((*anarace->getCurrentGoal())->getAllGoal(i) == 0) && (((*anarace->getCurrentGoal())->getIsBuildable(i))||(anarace->getLocationTotal(0,i))))
>         if ((*anarace->getCurrentGoal())->getIsHaveable(i)) 
> //			nonGoalList[i]=true;
> 	    {
632a492,510
>         	ForceEntry* forceEntry;
>     	    if(n>=size)
> 	        {
>         	    forceEntry = new ForceEntry(this, Rect(getRelativeClientRectPosition()+Point(0,0), Size(getClientRectWidth(), FONT_SIZE+6)),
>     	                Rect(getRelativeClientRectPosition(), getClientRectSize()+Size(0, getMaxRect().GetHeight())), "");
>             	forceList.push_back(forceEntry);
>         	    size++;
>     	    } else
> 	        {
>         	    forceEntry = *j;
>     	        j++;
> 	        }
> 
> 			forceEntry->setUnit(i);
> 			forceEntry->setType(stats[anarace->getRace()][i].unitType);
>             forceEntry->updateText("   " + *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i+UNIT_NULL_STRING)));
>             forceEntry->assignGoal(NULL);
> 			
> 			n++;
634,702d511
< 		for (unsigned int i = GAS_SCV+1; i--;)
< //		if ( ((*anarace->getCurrentGoal())->getAllGoal(i) == 0) && (((*anarace->getCurrentGoal())->getIsBuildable(i))||(anarace->getLocationTotal(0,i))))
< //	if ((*anarace->getCurrentGoal())->getIsHaveable(i)) 
< 			if (((*anarace->getCurrentGoal())->getIsHaveable(i))&&(!checkedUnits[i])) //&&(anarace->getLocationTotal(loc, i)))
< 
< //			nonGoalList[i]=true;
< 			{
< 				checkedUnits[i]=true;
< 				ForceEntry* forceEntry;
< 				if(n>=size) // add new at the end
< 				{
< 					forceEntry = new ForceEntry(this, Rect(getRelativeClientRectPosition()+Point(0,0), Size(getClientRectWidth(), FONT_SIZE+6)),
< 					Rect(getRelativeClientRectPosition(), getClientRectSize()+Size(0, getMaxRect().GetHeight())), "");
< 					forceList.push_back(forceEntry);
< 					size++;
< 					forceEntry->setUnit(i);
< 					forceEntry->setType(stats[anarace->getRace()][i].unitType);
< 					forceEntry->updateText("   " + *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i+UNIT_NULL_STRING)));
< 					forceEntry->assignGoal(NULL);
< 					n++;
< 				} else // adapt forceentry
< 				{
< 					forceEntry = *j;
< 					j++;
< 					forceEntry->setUnit(i);
< 					forceEntry->setType(stats[anarace->getRace()][i].unitType);
< 					forceEntry->updateText("   " + *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i+UNIT_NULL_STRING)));
< 					forceEntry->assignGoal(NULL);
< 					n++;
< 				}
< 			}
< /*	}
< 	for (unsigned int loc = 0; loc < 1; loc++)
< 	{
< 		bool unitsthere = false;
< 		for (unsigned int i = GAS_SCV+1; i--;)
< 			if (((*anarace->getCurrentGoal())->getIsHaveable(i))&&(anarace->getLocationTotal(loc, i)))
< 				unitsthere=true;
< 		if(!unitsthere)
< 		{
< 			locationName[1][loc]->Hide();
< 			continue;
< 		}	   
< 
< 		for (unsigned int i = GAS_SCV+1; i--;)
< //		if ( ((*anarace->getCurrentGoal())->getAllGoal(i) == 0) && (((*anarace->getCurrentGoal())->getIsBuildable(i))||(anarace->getLocationTotal(0,i))))
< //	if ((*anarace->getCurrentGoal())->getIsHaveable(i)) 
< 			if (((*anarace->getCurrentGoal())->getIsHaveable(i))&&(anarace->getLocationTotal(loc, i))&&(!checkedUnits[i]))
< //			nonGoalList[i]=true;
< 			{
< 				ForceEntry* forceEntry;
< 				if(n>=size)
< 				{
< 					forceEntry = new ForceEntry(this, Rect(getRelativeClientRectPosition()+Point(0,0), Size(getClientRectWidth(), FONT_SIZE+6)),
< 					Rect(getRelativeClientRectPosition(), getClientRectSize()+Size(0, getMaxRect().GetHeight())), "");
< 					forceList.push_back(forceEntry);
< 					size++;
< 				} else
< 				{
< 					forceEntry = *j;
< 					j++;
< 				}
< 				forceEntry->setUnit(i);
< 				forceEntry->setType(stats[anarace->getRace()][i].unitType);
< 				forceEntry->updateText("   " + *UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+i+UNIT_NULL_STRING)));
< 				forceEntry->assignGoal(NULL);
< 				n++;
< 			}
< 	}*/
704,708c513,517
< 	while(j!=forceList.end())
< 	{
< 		delete(*j);
< 		j = forceList.erase(j);
< 	}
---
> 		while(j!=forceList.end())
> 		{
> 			delete(*j);
> 			j = forceList.erase(j);
> 		}
716,737d524
< void ForceWindow::draw(DC* dc) const
< {
< 	return;
< 	if(!isShown())
< 		return;
< 	UI_Window::draw(dc);
< 	mouseType=0;
< 	for(std::list<ForceEntry*>::const_iterator j = forceList.begin(); (!mouseType)&&(j!= forceList.end()); ++j)
< 		if((*j)->isCurrentlyHighlighted())
< 		{
< 			const std::list<unsigned int> subErrorList = (*anarace->getCurrentGoal())->allowDeletion((*j)->getUnit());
< 			const std::list<unsigned int> addErrorList = (*anarace->getCurrentGoal())->allowAddition((*j)->getUnit());
< 			if((subErrorList.size()>0)&&(!addErrorList.size()))
< 				mouseType = 1;
< 			else if((!subErrorList.size())&&(!addErrorList.size()))
< 				mouseType = 3;
< 			else if((!subErrorList.size())&&(addErrorList.size()>0))
< 				mouseType = 2;
< 			break;
< 		}
< }
< 
772,781c559,560
< 
< 		// draw outer border:
< 		dc->SetPen(*theme.lookUpPen(OUTER_BORDER_PEN));
< 		dc->SetBrush(*theme.lookUpBrush(WINDOW_BACKGROUND_BRUSH));
< 		dc->DrawEdgedRoundedRectangle(x1-8, p.y-8, (unsigned int)(x2 - x1 + 6), (unsigned int)(y2 - p.y + 16), 6);
< 
< 		// draw inner border:
< 		dc->SetPen(*theme.lookUpPen(INNER_BORDER_HIGHLIGHT_PEN));
< 		dc->SetBrush(*theme.lookUpBrush(TRANSPARENT_BRUSH));
< 		dc->DrawEdgedRoundedRectangle(x1-5, p.y-5, (unsigned int)(x2 - x1), (unsigned int)(y2 - p.y + 10), 6);
---
> 			
> 		dc->DrawEdgedRoundedRectangle(x1-5, p.y-5, (unsigned int)(x2 - x1), (unsigned int)(y2 - p.y + 10), 4);
809d587
< 		dc->SetTextForeground(*UI_Object::theme.lookUpColor(BRIGHT_TEXT_COLOR));
828,839c606
< 
< void ForceWindow::setMarkedUnit(const unsigned int marked_unit)
< {
< #ifdef _SCC_DEBUG
< 	if(marked_unit >= UNIT_TYPE_COUNT) {
< 		toLog("DEBUG: (ForceWindow::setMarkedUnit): Value marked_unit out of range.");return;
< 	}
< #endif
< 	markedUnit = marked_unit;
< }
< 	
< const unsigned int ForceWindow::getMarkedUnit() const
---
> void ForceWindow::draw(DC* dc) const
841,843c608,624
< #ifdef _SCC_DEBUG
< 	if(markedUnit >= UNIT_TYPE_COUNT) {
< 		toLog("DEBUG: (ForceWindow::getMarkedUnit): Value markedUnit out of range.");return(0);
---
> 	if(!isShown())
> 		return;
> 	UI_Window::draw(dc);
> 	mouseType=0;
> /*    for(std::list<ForceEntry*>::const_iterator j = forceList.begin(); (!mouseType)&&(j!= forceList.end()); ++j)
> 	{
> 		if((*j)->isCurrentlyHighlighted())
> 		{
> 			const std::list<unsigned int> subErrorList = (*anarace->getCurrentGoal())->allowDeletion((*j)->getUnit());
> 			const std::list<unsigned int> addErrorList = (*anarace->getCurrentGoal())->allowAddition((*j)->getUnit());
> 			if((subErrorList.size()>0)&&(!addErrorList.size()))
> 				mouseType = 1;
> 			else if((!subErrorList.size())&&(!addErrorList.size()))
> 				mouseType = 3;
> 			else if((!subErrorList.size())&&(addErrorList.size()>0))
> 				mouseType = 2;
> 		}
845,846c626
< #endif
< 	return (markedUnit);
---
> 	drawTechTree(dc);*/
849,850d628
< 
< 
diff -r ./forceentry.cpp /home/claw/work/sc1061/sc/ef/forceentry.cpp
7c7
< 	UI_Button(entry_parent, Rect(entry_rect.GetTopLeft(), Size(entry_rect.GetWidth(), entry_rect.GetHeight())), entry_max_rect, entry_unit, FORCE_ENTRY_BUTTON, NO_TEXT_MODE, PRESS_BUTTON_MODE, DO_NOT_ADJUST, SMALL_NORMAL_BOLD_FONT, NO_AUTO_SIZE),
---
>     UI_Button(entry_parent, Rect(entry_rect.GetTopLeft(), Size(entry_rect.GetWidth(), entry_rect.GetHeight())), entry_max_rect, entry_unit, FORCE_ENTRY_BUTTON, NO_TEXT_MODE, PRESS_BUTTON_MODE, DO_NOT_ADJUST, SMALL_NORMAL_BOLD_FONT, NO_AUTO_SIZE),
9c9
< 	makeLocationGoal(new UI_Button(this, Rect(entry_rect.GetTopLeft() + Point(entry_rect.GetWidth() - 60, -11), Size(10,10)), entry_max_rect, GOAL_LOCATION_BUTTON, STATIC_BUTTON_MODE, ARRANGE_RIGHT)),
---
> //	makeLocationGoal(new UI_Button(this, Rect(entry_rect.GetTopLeft() + Point(entry_rect.GetWidth() - 30, -11), Size(10,10)), entry_max_rect, GOAL_LOCATION_BUTTON, STATIC_BUTTON_MODE, ARRANGE_RIGHT)),
12,15c12,15
< 	startForce(20),
< 	targetForce(20),
< 	currentForce(20),
< 	totalNumber(1),
---
>     startForce(20),
>     targetForce(20),
>     currentForce(20),
>     totalNumber(1),
18,19c18
< 	goal(NULL),
< 	showLocMenu(false)
---
> 	goal(NULL)
21c20
< 	makeLocationGoal->Hide();
---
> //	makeLocationGoal->Hide();
28c27
< 	UI_Button((UI_Button)object),
---
>     UI_Button((UI_Button)object),
30c29
< 	makeLocationGoal(new UI_Button(*object.makeLocationGoal)),
---
> //	makeLocationGoal(new UI_Button(*object.makeLocationGoal)),
32,35c31,34
< 	startForce(object.startForce),
< 	targetForce(object.targetForce),
< 	currentForce(object.currentForce),
< 	totalNumber(object.totalNumber),
---
>     startForce(object.startForce),
>     targetForce(object.targetForce),
>     currentForce(object.currentForce),
>     totalNumber(object.totalNumber),
38,39c37
< 	goal(object.goal),
< 	showLocMenu(object.showLocMenu)
---
> 	goal(object.goal)
47c45
< 	makeLocationGoal = new UI_Button(*object.makeLocationGoal);
---
> //	makeLocationGoal = new UI_Button(*object.makeLocationGoal);
50,53c48,51
< 	startForce = object.startForce;
< 	targetForce = object.targetForce;
< 	currentForce = object.currentForce;
< 	totalNumber = object.totalNumber;
---
>     startForce = object.startForce;
>     targetForce = object.targetForce;
>     currentForce = object.currentForce;
>     totalNumber = object.totalNumber;
58,59d55
< 	showLocMenu = object.showLocMenu;
< 
66c62
< 	delete makeLocationGoal;
---
> //	delete makeLocationGoal;
75c71
< 		t = makeLocationGoal->checkTooltip();
---
> //		t = makeLocationGoal->checkTooltip();
90c86
< 	UI_Object* t = UI_Object::checkHighlight();
---
> 	UI_Object* t = makeTimeGoal->checkHighlight();
93c89
< 		t = makeTimeGoal->checkHighlight();
---
> //		t = makeLocationGoal->checkHighlight();
96c92
< 			t = makeLocationGoal->checkHighlight();
---
> 			t = timeEntryBox->checkHighlight();
98,103c94
< 			{
< 				t = timeEntryBox->checkHighlight();
< 				if(t == NULL)
< 				    return(UI_Button::checkHighlight());
< 				else return(t);
< 			}
---
> 			    return(UI_Button::checkHighlight());
107,113c98,99
< 	} else return(t);
< }
< 
< const bool ForceEntry::isLocationGoalClicked() const
< {
< 	return(showLocMenu);
< //	makeLocationGoal->isLeftClicked());
---
> 	}
> 	else return(t);
115c101
< 
---
>                                                                                                                                                             
118,122c104,107
< 	if(!isShown())
< 		return;
< 	Size::mv(currentForce, startForce, targetForce);
< 	UI_Button::process();
< 	showLocMenu=false;
---
>     if(!isShown())
>         return;
>     Size::mv(currentForce, startForce, targetForce);
>     UI_Button::process();
126,129c111,114
< 		makeLocationGoal->forceUnpress();
< //		showLocMenu=false;
< 	} else
< 	if(makeLocationGoal->isLeftClicked())
---
> //		makeLocationGoal->forceUnpress();
> 		// locationMenu->Hide();
> 	} 
> /*	if(makeLocationGoal->isLeftClicked())
133,134c118,119
< 		showLocMenu=true;
< 	} else
---
> 		// locationMenu->Show();
> 	} else */
137c122
< 		makeLocationGoal->Hide();
---
> //		makeLocationGoal->Hide();
158,159c143,144
< 				r.SetWidth(((UI_Window*)getParent())->getClientRectWidth()-66);
< 			makeLocationGoal->Show();
---
> 				r.SetWidth(((UI_Window*)getParent())->getClientRectWidth()-26);
> //			makeLocationGoal->Show();
166c151
< 			makeLocationGoal->forceUnpress();
---
> //			makeLocationGoal->forceUnpress();
168c153
< 			makeLocationGoal->Hide();
---
> //			makeLocationGoal->Hide();
174,179c159,164
< 			makeLocationGoal->forceUnpress();
< 			makeTimeGoal->forceUnpress();
< 			makeLocationGoal->Hide();
< 			makeTimeGoal->Hide();
< 			timeEntryBox->Hide();
< 			buttonPlacementArea.SetWidth(r.GetWidth());
---
> //          makeLocationGoal->forceUnpress();
>             makeTimeGoal->forceUnpress();
> //          makeLocationGoal->Hide();
>             makeTimeGoal->Hide();
>             timeEntryBox->Hide();
>             buttonPlacementArea.SetWidth(r.GetWidth());
288a274
> 
diff -r ./forceentry.hpp /home/claw/work/sc1061/sc/ef/forceentry.hpp
25,29d24
< 
< 		const unsigned int getHeight() const;
< 
< 		//const bool showLocationMenu() const;
< 		const bool isLocationGoalClicked() const;
37c32
< 		UI_Button* makeLocationGoal;
---
> //		UI_Button* makeLocationGoal;
39a35
> 	
50c46
< 		bool showLocMenu;
---
> //		static LocationMenu* locationMenu;
Files ./forceentry.o and /home/claw/work/sc1061/sc/ef/forceentry.o differ
diff -r ./force.hpp /home/claw/work/sc1061/sc/ef/force.hpp
7a8
> //#include "forcemenu.hpp"
11d11
< #include "locmenu.hpp"
17d16
< 
22a22
> //	FORCE_MENU,
37,38c37
< 		void assignAnarace(ANARACE* force_anarace);
< 		void drawTechTree(DC* dc) const;
---
> 
40,42c39,40
< 		unsigned int addUnit, addTime, addLocation;
< 		signed int addCount;
< 		
---
> 		void drawTechTree(DC* dc) const;
> 
55d52
< 		UI_StaticText* locationName[2][MAX_LOCATIONS];
59d55
< 		ForceEntry* movedForceEntry;
60a57
> 		
65a63
> //		ForceMenu* forceMenu; TODO -> in Map-tab reinschieben
67d64
< 		LocationMenu* locationMenu;
Files ./forcemenu.o and /home/claw/work/sc1061/sc/ef/forcemenu.o differ
Files ./force.o and /home/claw/work/sc1061/sc/ef/force.o differ
diff -r ./goalmenu.cpp /home/claw/work/sc1061/sc/ef/goalmenu.cpp
22,26d21
< void GoalMenu::assignAnarace(ANARACE* goal_anarace)
< {
< 	anarace = goal_anarace;
< }
< 
diff -r ./goalmenu.hpp /home/claw/work/sc1061/sc/ef/goalmenu.hpp
17d16
< 		void assignAnarace(ANARACE* goal_anarace);
Files ./goalmenu.o and /home/claw/work/sc1061/sc/ef/goalmenu.o differ
diff -r ./guimain.cpp /home/claw/work/sc1061/sc/ef/guimain.cpp
142d141
< 	msgWindow->addMessage(" - - - www.clawsoftware.de - - - ");
159,164c158,163
< 	delete mainWindow;
< 	delete msgWindow;
< 	delete tutorialWindow;
< 	delete settingsWindow;
< 	for(int i=0;i<MAX_PLAYER;i++)
< 		delete player[i];
---
>     delete mainWindow;
>     delete msgWindow;
>     delete tutorialWindow;
>     delete settingsWindow;
>     for(int i=0;i<MAX_PLAYER;i++)
>         delete player[i];
453c452
< 		if(configuration.isSoftwareMouse())
---
> /*		if(configuration.isSoftwareMouse())
455c454
< //			SDL_ShowCursor(SDL_DISABLE);
---
> 			SDL_ShowCursor(SDL_DISABLE);
460c459
< 				case 0://dc->DrawBitmap(*UI_Object::theme.lookUpBitmap(MOUSE_NONE), p);
---
> 				case 0:dc->DrawBitmap(*UI_Object::theme.lookUpBitmap(MOUSE_NONE), p);
463c462
< //					dc->DrawBitmap(*UI_Object::theme.lookUpBitmap(MOUSE_LEFT), p);
---
> 					dc->DrawBitmap(*UI_Object::theme.lookUpBitmap(MOUSE_LEFT), p);
468c467
< //					dc->DrawBitmap(*UI_Object::theme.lookUpBitmap(MOUSE_RIGHT), p);
---
> 					dc->DrawBitmap(*UI_Object::theme.lookUpBitmap(MOUSE_RIGHT), p);
473c472
< //					dc->DrawBitmap(*UI_Object::theme.lookUpBitmap(MOUSE_BOTH), p);
---
> 					dc->DrawBitmap(*UI_Object::theme.lookUpBitmap(MOUSE_BOTH), p);
481,482c480,481
< //		else
< //			SDL_ShowCursor(SDL_ENABLE);
---
> 		else
> 			SDL_ShowCursor(SDL_ENABLE);*/
Files ./guimain.o and /home/claw/work/sc1061/sc/ef/guimain.o differ
diff -r ./info.cpp /home/claw/work/sc1061/sc/ef/info.cpp
49,53d48
< void InfoWindow::assignAnarace(ANARACE* info_anarace)
< {
< 	anarace = info_anarace;
< }
< 
diff -r ./info.hpp /home/claw/work/sc1061/sc/ef/info.hpp
30d29
< 		void assignAnarace(ANARACE* info_anarace);
Files ./info.o and /home/claw/work/sc1061/sc/ef/info.o differ
Files ./languagemenu.o and /home/claw/work/sc1061/sc/ef/languagemenu.o differ
Only in ./: locmenu.cpp
Only in ./: locmenu.hpp
Only in ./: locmenu.o
diff -r ./main.cpp /home/claw/work/sc1061/sc/ef/main.cpp
327c327
< 							UI_Object::editTextField->addChar(' ');
---
> 							UI_Object::editTextField->addChar('_');
Files ./main.o and /home/claw/work/sc1061/sc/ef/main.o differ
diff -r ./mainwindow.cpp /home/claw/work/sc1061/sc/ef/mainwindow.cpp
4c4,5
< 	UI_Window( NULL, MAIN_WINDOW_TITLE_STRING, MAIN_WINDOW, 0, NOT_SCROLLED, NO_AUTO_SIZE_ADJUST, TABBED )
---
> 	UI_Window( NULL, MAIN_WINDOW_TITLE_STRING, MAIN_WINDOW, 0, NOT_SCROLLED, NO_AUTO_SIZE_ADJUST, TABBED ),
> 	url(new UI_StaticText(this, "www.clawsoftware.de", getRelativeRect(), FORCE_TEXT_COLOR, SMALL_NORMAL_BOLD_FONT, LOWER_CENTERED_TEXT_MODE))
8,11c9,12
< 	tab[BASIC_TAB] = new UI_Button(this, Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), BASIC_TAB_STRING, TAB_BUTTON, TOTAL_CENTERED_TEXT_MODE, TAB_BUTTON_MODE, ARRANGE_TOP_LEFT, MIDDLE_NORMAL_BOLD_FONT, CONSTANT_SIZE);
< 	tab[ADVANCED_TAB] = new UI_Button(this, Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), ADVANCED_TAB_STRING, TAB_BUTTON, TOTAL_CENTERED_TEXT_MODE, TAB_BUTTON_MODE, ARRANGE_TOP_LEFT, MIDDLE_NORMAL_BOLD_FONT, CONSTANT_SIZE);
< 	tab[EXPERT_TAB] = new UI_Button(this, Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), EXPERT_TAB_STRING, TAB_BUTTON, TOTAL_CENTERED_TEXT_MODE, TAB_BUTTON_MODE, ARRANGE_TOP_LEFT, MIDDLE_NORMAL_BOLD_FONT, CONSTANT_SIZE);
< 	tab[GOSU_TAB] = new UI_Button(this, Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), GOSU_TAB_STRING, TAB_BUTTON, TOTAL_CENTERED_TEXT_MODE, TAB_BUTTON_MODE, ARRANGE_TOP_LEFT, MIDDLE_NORMAL_BOLD_FONT, CONSTANT_SIZE);
---
>     tab[BASIC_TAB] = new UI_Button(this, Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), BASIC_TAB_STRING, TAB_BUTTON, TOTAL_CENTERED_TEXT_MODE, TAB_BUTTON_MODE, ARRANGE_TOP_LEFT, MIDDLE_NORMAL_BOLD_FONT, CONSTANT_SIZE);
>     tab[ADVANCED_TAB] = new UI_Button(this, Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), ADVANCED_TAB_STRING, TAB_BUTTON, TOTAL_CENTERED_TEXT_MODE, TAB_BUTTON_MODE, ARRANGE_TOP_LEFT, MIDDLE_NORMAL_BOLD_FONT, CONSTANT_SIZE);
>     tab[EXPERT_TAB] = new UI_Button(this, Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), EXPERT_TAB_STRING, TAB_BUTTON, TOTAL_CENTERED_TEXT_MODE, TAB_BUTTON_MODE, ARRANGE_TOP_LEFT, MIDDLE_NORMAL_BOLD_FONT, CONSTANT_SIZE);
>     tab[GOSU_TAB] = new UI_Button(this, Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), Rect(getRelativePosition()+Size(10,0), Size(getWidth()-20, 20)), GOSU_TAB_STRING, TAB_BUTTON, TOTAL_CENTERED_TEXT_MODE, TAB_BUTTON_MODE, ARRANGE_TOP_LEFT, MIDDLE_NORMAL_BOLD_FONT, CONSTANT_SIZE);
38a40
> delete url;
diff -r ./mainwindow.hpp /home/claw/work/sc1061/sc/ef/mainwindow.hpp
14a15
> 		UI_StaticText* url;
Files ./mainwindow.o and /home/claw/work/sc1061/sc/ef/mainwindow.o differ
diff -r ./menu.cpp /home/claw/work/sc1061/sc/ef/menu.cpp
12c12
< 	UI_Object((UI_Object)object),
---
>     UI_Object((UI_Object)object),
14,15c14,15
< 	menuLevel(object.menuLevel),
< 	pressedItem(object.pressedItem),
---
>     menuLevel(object.menuLevel),
>     pressedItem(object.pressedItem),
17c17
< 	height(object.height),
---
>     height(object.height),
19,20c19,20
< 	p1(object.p1),
< 	p2(object.p2)
---
>     p1(object.p1),
>     p2(object.p2)
50c50
< 	UI_Object(menu_parent, rect),
---
>     UI_Object(menu_parent, rect),
52,66c52,66
< 	menuLevel(0),
< 	pressedItem(-1),
< 	markedItem(-1),
< 	height(0),
< 	chooseMenu(choose_menu),
< 	p1(),
< 	p2()
< {
< 	for(int i=0;i<entryNumber;i++)
< 	{
< 		Rect edge = Rect(Point(10 + (i%coloumns) * (s.GetWidth()+10), (i/coloumns)*(s.GetHeight()+12)), s);
< 		MenuEntry* entry = new MenuEntry(this, edge, (eString)(firstString+i));
< 		entry->setButton(button);
< 		menuEntries.push_back(entry);
< 	}
---
>     menuLevel(0),
>     pressedItem(-1),
>     markedItem(-1),
>     height(0),
>     chooseMenu(choose_menu),
>     p1(),
>     p2()
> {
>     for(int i=0;i<entryNumber;i++)
>     {
>         Rect edge = Rect(Point(10 + (i%coloumns) * (s.GetWidth()+10), (i/coloumns)*(s.GetHeight()+12)), s);
>         MenuEntry* entry = new MenuEntry(this, edge, (eString)(firstString+i));
>         entry->setButton(button);
>         menuEntries.push_back(entry);
>     }
71c71
< 	for(list<MenuEntry*>::const_iterator m=menuEntries.begin(); m!=menuEntries.end(); ++m)
---
>     for(list<MenuEntry*>::const_iterator m=menuEntries.begin(); m!=menuEntries.end(); ++m)
Files ./menuentry.o and /home/claw/work/sc1061/sc/ef/menuentry.o differ
Files ./menu.o and /home/claw/work/sc1061/sc/ef/menu.o differ
Files ./message.o and /home/claw/work/sc1061/sc/ef/message.o differ
diff -r ./order.cpp /home/claw/work/sc1061/sc/ef/order.cpp
25,39c25,39
< 	blend(object.blend),
< 	blendTarget(object.blendTarget),
< 	blendStart(object.blendStart),
< 	rect(object.rect),
< 	brect(object.brect),
< 	target(object.target),
< 	btarget(object.btarget),
< 	start(object.start),
< 	bstart(object.bstart),
< 	marker(object.marker),
< 	bonew(object.bonew),
< 	checked(object.checked),
< 	unit(object.unit),
< 	IP(object.IP),
< 	row(object.row)
---
>     blend(object.blend),
>     blendTarget(object.blendTarget),
>     blendStart(object.blendStart),
>     rect(object.rect),
>     brect(object.brect),
>     target(object.target),
>     btarget(object.btarget),
>     start(object.start),
>     bstart(object.bstart),
>     marker(object.marker),
>     bonew(object.bonew),
>     checked(object.checked),
>     unit(object.unit),
>     IP(object.IP),
>     row(object.row)
65,67c65,67
< 	if(unit_type >= UNIT_TYPE_COUNT) {
< 		toLog("WARNING: (Order::setUnit): Value out of range.");return;
< 	}
---
>     if(unit_type >= UNIT_TYPE_COUNT) {
>         toLog("WARNING: (Order::setUnit): Value out of range.");return;
>     }
75,77c75,77
< 	if(ip >= MAX_LENGTH) {
< 		toLog("WARNING: (Order::setIP): Value out of range.");return;
< 	}
---
>     if(ip >= MAX_LENGTH) {
>         toLog("WARNING: (Order::setIP): Value out of range.");return;
>     }
85,87c85,87
< 	if(order_row >= MAX_LENGTH) {
< 		toLog("WARNING: (Order::setRow): Value out of range.");return;
< 	}
---
>     if(order_row >= MAX_LENGTH) {
>         toLog("WARNING: (Order::setRow): Value out of range.");return;
>     }
95,97c95,97
< 	if(unit >= UNIT_TYPE_COUNT) {
< 		toLog("WARNING: (Order::getUnit): Variable not initialized.");return(0);
< 	}
---
>     if(unit >= UNIT_TYPE_COUNT) {
>         toLog("WARNING: (Order::getUnit): Variable not initialized.");return(0);
>     }
105,107c105,107
< 	if(IP >= MAX_LENGTH) {
< 		toLog("WARNING: (Order::getIP): Variable not initialized.");return(0);
< 	}
---
>     if(IP >= MAX_LENGTH) {
>         toLog("WARNING: (Order::getIP): Variable not initialized.");return(0);
>     }
115,117c115,117
< 	if(row >= MAX_LENGTH) {
< 		toLog("WARNING: (Order::getRow): Variable not initialized.");return(0);
< 	}
---
>     if(row >= MAX_LENGTH) {
>         toLog("WARNING: (Order::getRow): Variable not initialized.");return(0);
>     }
Files ./order.o and /home/claw/work/sc1061/sc/ef/order.o differ
diff -r ./player.cpp /home/claw/work/sc1061/sc/ef/player.cpp
16c16
< 	for(int i=0;i<MAX_WINDOWS;i++)
---
>     for(int i=0;i<MAX_WINDOWS;i++)
34d33
< 	
40,46d38
< 	((ForceWindow*)window[FORCE_WINDOW])->assignAnarace(*anarace);
< 	((TimerWindow*)window[TIMER_WINDOW])->assignAnarace(*anarace);
< 	((StatisticsWindow*)window[STATISTICS_WINDOW])->assignAnarace(*anarace);
< 	((InfoWindow*)window[INFO_WINDOW])->assignAnarace(*anarace);
< 	((BoWindow*)window[BUILD_ORDER_WINDOW])->assignAnarace(*anarace);
< 	((BoGraphWindow*)window[BO_GRAPH_WINDOW])->assignAnarace(*anarace);
< 	((BoDiagramWindow*)window[BO_DIAGRAM_WINDOW])->assignAnarace(*anarace);
53,57c45,49
< 	unsigned int fac[20];
< 	unsigned int unitCounter[UNIT_TYPE_COUNT][MAX_LENGTH];
< 	unsigned int height[UNIT_TYPE_COUNT];
< 	unsigned int lines[UNIT_TYPE_COUNT];
< 	unsigned int faccount=0;
---
>     unsigned int fac[20];
>     unsigned int unitCounter[UNIT_TYPE_COUNT][MAX_LENGTH];
>     unsigned int height[UNIT_TYPE_COUNT];
>     unsigned int lines[UNIT_TYPE_COUNT];
>     unsigned int faccount=0;
61,66c53,58
< 	{
< 		for(int j=0;j<MAX_LENGTH;j++)
< 			unitCounter[i][j]=0;
< 		height[i]=0;
< 		lines[i]=0;
< 	}
---
>     {
>         for(int j=0;j<MAX_LENGTH;j++)
>             unitCounter[i][j]=0;
>         height[i]=0;
>         lines[i]=0;
>     }
70c62
< 		fac[i]=0; // TODO in BOGRAPH?
---
>         fac[i]=0; // TODO in BOGRAPH?
73,76c65,68
< 	for(map<long, Order>::const_iterator order=orderList.begin(); order!=orderList.end(); ++order)
< 	{
< 		unsigned int IP=order->second.getIP();
< // falls facility benoetigt wird und Zahl der zu dem Zeitpunkt vorhandenen Einheiten minus der verfuegbaren Einheiten > hoehe => setze hoehe auf diesen Wert		
---
>     for(map<long, Order>::const_iterator order=orderList.begin(); order!=orderList.end(); ++order)
>     {
>         unsigned int IP=order->second.getIP();
> // falls facility benoetigt wird und Zahl der zu dem Zeitpunkt vorhandenen Einheiten minus der verfuegbaren Einheiten > hoehe => setze hoehe auf diesen Wert        
78,83c70,75
< 		  ((*anarace)->getProgramTotalCount(IP, (*anarace)->getProgramFacility(IP))-(*anarace)->getProgramAvailibleCount(IP,(*anarace)->getProgramFacility(IP))>height[(*anarace)->getProgramFacility(IP)]))
< 			 height[(*anarace)->getProgramFacility(IP)]=(*anarace)->getProgramTotalCount(IP,(*anarace)->getProgramFacility(IP))-(*anarace)->getProgramAvailibleCount(IP,(*anarace)->getProgramFacility(IP));
< 		// total - availible at that time equals used facilities
< 	}
< 	//=>  height[i] = max used i-facilities
< 																																							
---
>           ((*anarace)->getProgramTotalCount(IP, (*anarace)->getProgramFacility(IP))-(*anarace)->getProgramAvailibleCount(IP,(*anarace)->getProgramFacility(IP))>height[(*anarace)->getProgramFacility(IP)]))
>              height[(*anarace)->getProgramFacility(IP)]=(*anarace)->getProgramTotalCount(IP,(*anarace)->getProgramFacility(IP))-(*anarace)->getProgramAvailibleCount(IP,(*anarace)->getProgramFacility(IP));
>         // total - availible at that time equals used facilities
>     }
>     //=>  height[i] = max used i-facilities
>                                                                                                                                                             
85,86c77,78
< 	for(int i=UNIT_TYPE_COUNT;i--;)
< 	{
---
>     for(int i=UNIT_TYPE_COUNT;i--;)
>     {
88,95c80,87
< 		while(height[i]>MIN_HEIGHT) {
< 			height[i]-=MIN_HEIGHT;
< 			lines[i]++;
< 		}
< 		if(height[i]>0)
< 			lines[i]++;
< 		if(lines[i]>1)
< 			height[i]=MIN_HEIGHT;
---
>         while(height[i]>MIN_HEIGHT) {
>             height[i]-=MIN_HEIGHT;
>             lines[i]++;
>         }
>         if(height[i]>0)
>             lines[i]++;
>         if(lines[i]>1)
>             height[i]=MIN_HEIGHT;
98c90
< 	}
---
>     }
102,117c94,109
< 	faccount=1;
< 	for(map<long, Order>::const_iterator order=orderList.begin(); order!=orderList.end(); ++order)
< 	{
< 		if((*anarace)->getProgramFacility(order->second.getIP()))
< 		{
< 			unsigned int i;
< 			// search for 'untaken' facilities
< 			for(i=1;(i<faccount)&&(fac[i]!=(*anarace)->getProgramFacility(order->second.getIP()));i++);
< 																																							
< 			if(i==faccount)
< 			{
< 				fac[i]=(*anarace)->getProgramFacility(order->second.getIP());
< 				faccount++;
< 			}
< 		}
< 	}
---
>     faccount=1;
>     for(map<long, Order>::const_iterator order=orderList.begin(); order!=orderList.end(); ++order)
>     {
>         if((*anarace)->getProgramFacility(order->second.getIP()))
>         {
>             unsigned int i;
>             // search for 'untaken' facilities
>             for(i=1;(i<faccount)&&(fac[i]!=(*anarace)->getProgramFacility(order->second.getIP()));i++);
>                                                                                                                                                             
>             if(i==faccount)
>             {
>                 fac[i]=(*anarace)->getProgramFacility(order->second.getIP());
>                 faccount++;
>             }
>         }
>     }
122,129c114,121
< 	int position=0;
< 	for(int i=0;i<20;i++)
< 	{
< 		bograph[position].type=fac[i];
< 		bograph[position].lines=lines[fac[i]];
< 		bograph[position].height=height[fac[i]];
< 		position+=lines[fac[i]];
< 	}
---
>     int position=0;
>     for(int i=0;i<20;i++)
>     {
>         bograph[position].type=fac[i];
>         bograph[position].lines=lines[fac[i]];
>         bograph[position].height=height[fac[i]];
>         position+=lines[fac[i]];
>     }
132c124
< 	int orderCount=0;
---
>     int orderCount=0;
134,137c126,129
< 	for(map<long, Order>::iterator order=orderList.begin(); order!=orderList.end(); ++order) {
< 		sortedList[orderCount]=&(order->second);
< 		orderCount++;
< 	}
---
>     for(map<long, Order>::iterator order=orderList.begin(); order!=orderList.end(); ++order) {
>         sortedList[orderCount]=&(order->second);
>         orderCount++;
>     }
143,148c135,140
< 	for(int k=0;k<orderCount;k++)
< 	{
< 		if((*anarace)->getProgramFacility(sortedList[k]->getIP()))
< 			for(int i=0;i<20;i++)
< 				if(bograph[i].type==(*anarace)->getProgramFacility(sortedList[k]->getIP()))
< 				{
---
>     for(int k=0;k<orderCount;k++)
>     {
>         if((*anarace)->getProgramFacility(sortedList[k]->getIP()))
>             for(int i=0;i<20;i++)
>                 if(bograph[i].type==(*anarace)->getProgramFacility(sortedList[k]->getIP()))
>                 {
151,155c143,147
< 																																							
< 		// calculate the y-position of this specific order, THIS HAS TO BEGIN WITH 0 -> MAX_LENGTH, DO NOT USE -- OPTIMIZATION!
< 					for(int j=0;j<MAX_LENGTH;j++)
< 						if(unitCounter[bograph[i].type][j]<=(*anarace)->getRealProgramTime(sortedList[k]->getIP()))
< 						{
---
>                                                                                                                                                             
>         // calculate the y-position of this specific order, THIS HAS TO BEGIN WITH 0 -> MAX_LENGTH, DO NOT USE -- OPTIMIZATION!
>                     for(int j=0;j<MAX_LENGTH;j++)
>                         if(unitCounter[bograph[i].type][j]<=(*anarace)->getRealProgramTime(sortedList[k]->getIP()))
>                         {
159,165c151,157
< 																																							
< 							unitCounter[bograph[i].type][j]=(*anarace)->getRealProgramTime(sortedList[k]->getIP())+stats[(*anarace)->getRace()][sortedList[k]->getUnit()/*(*anarace)->getPhaenoCode(sortedList[k]->getIP())*/].BT;
< 							hoehe=j;
< 							j=MAX_LENGTH;
< 						}
< 																																							
< 					Rect t=Rect(
---
>                                                                                                                                                             
>                             unitCounter[bograph[i].type][j]=(*anarace)->getRealProgramTime(sortedList[k]->getIP())+stats[(*anarace)->getRace()][sortedList[k]->getUnit()/*(*anarace)->getPhaenoCode(sortedList[k]->getIP())*/].BT;
>                             hoehe=j;
>                             j=MAX_LENGTH;
>                         }
>                                                                                                                                                             
>                     Rect t=Rect(
167,168c159,160
< 	   (1+i+hoehe/MIN_HEIGHT)*(FONT_SIZE+10)+(hoehe%MIN_HEIGHT)*(FONT_SIZE+10)/bograph[i].height),
< 																																							
---
>        (1+i+hoehe/MIN_HEIGHT)*(FONT_SIZE+10)+(hoehe%MIN_HEIGHT)*(FONT_SIZE+10)/bograph[i].height),
>                                                                                                                                                             
170,180c162,172
< 	 (FONT_SIZE+9)/(bograph[i].height)));
< 					if(t!=sortedList[k]->btarget)
< 						sortedList[k]->bstart=sortedList[k]->brect;
< 					sortedList[k]->btarget=t;
< 					if(sortedList[k]->bonew)
< 					{
< //					  sortedList[k]->brect=sortedList[k]->btarget;
< 						sortedList[k]->bstart=sortedList[k]->btarget;
< 					}
< 				}
< 	}
---
>      (FONT_SIZE+9)/(bograph[i].height)));
>                     if(t!=sortedList[k]->btarget)
>                         sortedList[k]->bstart=sortedList[k]->brect;
>                     sortedList[k]->btarget=t;
>                     if(sortedList[k]->bonew)
>                     {
> //                      sortedList[k]->brect=sortedList[k]->btarget;
>                         sortedList[k]->bstart=sortedList[k]->btarget;
>                     }
>                 }
>     }
183,192c175,184
< 	int j=0;
< 	for(int i=0;i<20;i++)
< 		if(bograph[i].type>0)
< 		{
< 			bograph[i].edge=Rect(window[BO_GRAPH_WINDOW]->getAbsoluteClientRectPosition(), Size(window[BO_GRAPH_WINDOW]->getClientRectWidth(), bograph[i].lines*(FONT_SIZE+10)));
< 			bograph[i].edge.SetTop(window[BO_GRAPH_WINDOW]->getAbsoluteClientRectUpperBound()+(j+1)*(FONT_SIZE+10));
< 			j+=bograph[i].lines;
< 			if(window[BO_GRAPH_WINDOW]->fitItemToAbsoluteClientRect(bograph[i].edge,1))
< 				lastbographY=bograph[i].edge.GetBottom();
< 		}
---
>     int j=0;
>     for(int i=0;i<20;i++)
>         if(bograph[i].type>0)
>         {
>             bograph[i].edge=Rect(window[BO_GRAPH_WINDOW]->getAbsoluteClientRectPosition(), Size(window[BO_GRAPH_WINDOW]->getClientRectWidth(), bograph[i].lines*(FONT_SIZE+10)));
>             bograph[i].edge.SetTop(window[BO_GRAPH_WINDOW]->getAbsoluteClientRectUpperBound()+(j+1)*(FONT_SIZE+10));
>             j+=bograph[i].lines;
>             if(window[BO_GRAPH_WINDOW]->fitItemToAbsoluteClientRect(bograph[i].edge,1))
>                 lastbographY=bograph[i].edge.GetBottom();
>         }
232,235c224,227
< 	for(map<long, Order>::const_iterator order=orderList.begin(); order!=orderList.end(); ++order) {
< 		sortedList[orderCount]=&(order->second);
< 		orderCount++;
< 	}
---
>     for(map<long, Order>::const_iterator order=orderList.begin(); order!=orderList.end(); ++order) {
>         sortedList[orderCount]=&(order->second);
>         orderCount++;
>     }
238c230
< 	std::sort(sortedList, sortedList+orderCount, Order::OrderDescendingIPSort());
---
>     std::sort(sortedList, sortedList+orderCount, Order::OrderDescendingIPSort());
240,241c232,233
< 	for(int k=0;k<orderCount;k++)
< 		colors[k]=sortedList[k]->getUnit();
---
>     for(int k=0;k<orderCount;k++)
>         colors[k]=sortedList[k]->getUnit();
243c235
< //	for(map<long, Order>::const_iterator order=orderList.begin(); order!=orderList.end(); ++order)
---
> //    for(map<long, Order>::const_iterator order=orderList.begin(); order!=orderList.end(); ++order)
294,312c286,304
< 						if(points1[0].y>points2[0].y)
< 						{
< 							drawGene(dc, k, points1, position.GetTopLeft(), bla1, bla2);
< 							drawGene(dc, k, points2, position.GetTopLeft(), bla1, bla2);
< 						}
< 						else
< 						{
< 							drawGene(dc, k, points2, position.GetTopLeft(), bla1, bla2);
< 							drawGene(dc, k, points1, position.GetTopLeft(), bla1, bla2);
< 						}
< 						if(points3[0].y>points4[0].y)
< 						{
< 							drawGene(dc, k, points3, position.GetTopLeft(), bla1, bla2);
< 							drawGene(dc, k, points4, position.GetTopLeft(), bla1, bla2);
< 						} else
< 						{
< 							drawGene(dc, k, points4, position.GetTopLeft(), bla1, bla2);
< 							drawGene(dc, k, points3, position.GetTopLeft(), bla1, bla2);
< 						}
---
>                         if(points1[0].y>points2[0].y)
>                         {
>                             drawGene(dc, k, points1, position.GetTopLeft(), bla1, bla2);
>                             drawGene(dc, k, points2, position.GetTopLeft(), bla1, bla2);
>                         }
>                         else
>                         {
>                             drawGene(dc, k, points2, position.GetTopLeft(), bla1, bla2);
>                             drawGene(dc, k, points1, position.GetTopLeft(), bla1, bla2);
>                         }
>                         if(points3[0].y>points4[0].y)
>                         {
>                             drawGene(dc, k, points3, position.GetTopLeft(), bla1, bla2);
>                             drawGene(dc, k, points4, position.GetTopLeft(), bla1, bla2);
>                         } else
>                         {
>                             drawGene(dc, k, points4, position.GetTopLeft(), bla1, bla2);
>                             drawGene(dc, k, points3, position.GetTopLeft(), bla1, bla2);
>                         }
315c307
< 						if(points3[0].y>points4[0].y)
---
>         	            if(points3[0].y>points4[0].y)
331,332c323,324
< 							drawGene(dc, k, points2, position.GetTopLeft(), bla1, bla2);
< 							drawGene(dc, k, points1, position.GetTopLeft(), bla1, bla2);
---
>                     	    drawGene(dc, k, points2, position.GetTopLeft(), bla1, bla2);
> 	            	        drawGene(dc, k, points1, position.GetTopLeft(), bla1, bla2);
356,357c348
< 	};
< 	((ForceWindow*)window[FORCE_WINDOW])->drawTechTree(dc);
---
> 	}
380,382c371,373
< 			window[BO_DIAGRAM_WINDOW]->Show();
< 			window[STATISTICS_WINDOW]->Show();
< 			window[BO_GRAPH_WINDOW]->Show();
---
>             window[BO_DIAGRAM_WINDOW]->Show();
>             window[STATISTICS_WINDOW]->Show();
>             window[BO_GRAPH_WINDOW]->Show();
Files ./player.o and /home/claw/work/sc1061/sc/ef/player.o differ
Files ./progressbar.o and /home/claw/work/sc1061/sc/ef/progressbar.o differ
Files ./racemenu.o and /home/claw/work/sc1061/sc/ef/racemenu.o differ
Files ./resolutionmenu.o and /home/claw/work/sc1061/sc/ef/resolutionmenu.o differ
Files ./setwindow.o and /home/claw/work/sc1061/sc/ef/setwindow.o differ
diff -r ./statistics.cpp /home/claw/work/sc1061/sc/ef/statistics.cpp
28,32d27
< 
< void StatisticsWindow::assignAnarace(ANARACE* stat_anarace)
< {
< 	anarace = stat_anarace;
< }
diff -r ./statistics.hpp /home/claw/work/sc1061/sc/ef/statistics.hpp
33d32
< 		void assignAnarace(ANARACE* stat_anarace);
Files ./statistics.o and /home/claw/work/sc1061/sc/ef/statistics.o differ
Files ./thememenu.o and /home/claw/work/sc1061/sc/ef/thememenu.o differ
diff -r ./timer.cpp /home/claw/work/sc1061/sc/ef/timer.cpp
30,34d29
< 
< void TimerWindow::assignAnarace(ANARACE* timer_anarace)
< {
< 	anarace = timer_anarace;
< }
65,66c60
< 			continueButton->updateText(CLICK_TO_PAUSE_STRING);
< 			continueButton->updateToolTip(PAUSE_OPTIMIZATION_TOOLTIP_STRING);
---
> 			continueButton->updateText(CLICK_TO_PAUSE_STRING);	
71,72c65
< 			continueButton->updateText(CLICK_TO_CONTINUE_STRING);
< 			continueButton->updateToolTip(CONTINUE_OPTIMIZATION_TOOLTIP_STRING);
---
> 			continueButton->updateText(CLICK_TO_CONTINUE_STRING);	
diff -r ./timer.hpp /home/claw/work/sc1061/sc/ef/timer.hpp
22d21
< 		void assignAnarace(ANARACE* timer_anarace);
Files ./timer.o and /home/claw/work/sc1061/sc/ef/timer.o differ
Files ./tutorial.o and /home/claw/work/sc1061/sc/ef/tutorial.o differ
diff -r ./unitmenu.cpp /home/claw/work/sc1061/sc/ef/unitmenu.cpp
8,13c8,13
< 	for(int i=0;i<UNIT_TYPE_COUNT;i++) //TODO
< 	{
< 		MenuEntry* entry = new MenuEntry(this,
< 						Rect(0, 0, 130, FONT_SIZE+5), "ERROR"); //TODO maybe already initialize with name string
< 		menuEntries.push_back(entry);
< 	}
---
>     for(int i=0;i<UNIT_TYPE_COUNT;i++) //TODO
>     {
>         MenuEntry* entry = new MenuEntry(this,
>                         Rect(0, 0, 130, FONT_SIZE+5), "ERROR"); //TODO maybe already initialize with name string
>         menuEntries.push_back(entry);
>     }
18,20c18,20
< 	Menu((Menu)object),
< 	anarace(object.anarace),
< 	facilityNumber(object.facilityNumber);
---
>     Menu((Menu)object),
>     anarace(object.anarace),
>     facilityNumber(object.facilityNumber);
45c45
< //	if(stats[(*anarace->getStartCondition())->getRace()][i].unitType != ADD_ON_UNIT_TYPE)
---
> //    if(stats[(*anarace->getStartCondition())->getRace()][i].unitType != ADD_ON_UNIT_TYPE)
48c48
< 		if((stats[(*anarace->getStartCondition())->getRace()][j].facility[0] == i)||
---
>         if((stats[(*anarace->getStartCondition())->getRace()][j].facility[0] == i)||
58,62d57
< 		
< void UnitMenu::assignAnarace(ANARACE* goal_anarace)
< {
< 	anarace = goal_anarace;
< }
72,73c67,68
< 	switch((*anarace->getStartCondition())->getRace())
< 	{
---
>     switch((*anarace->getStartCondition())->getRace())
>     {
87c82
< 				for(list<MenuEntry*>::iterator m=menuEntries.begin(); m!=menuEntries.end(); ++m)
---
> 		        for(list<MenuEntry*>::iterator m=menuEntries.begin(); m!=menuEntries.end(); ++m)
115,116c110,111
< 				for(list<MenuEntry*>::iterator m=menuEntries.begin(); m!=menuEntries.end(); ++m)
< 				{
---
>                 for(list<MenuEntry*>::iterator m=menuEntries.begin(); m!=menuEntries.end(); ++m)
>                 {
118,132c113,127
< 					if(i >= facilityNumber )
< 					{
< 						(*m)->Hide();
< 						continue;
< 					}
< 					Rect edge = Rect(Point(10+135*(height%2), ((height+1)/2+1) * (FONT_SIZE + 9) /*- getScrollY()*/), Size(120, FONT_SIZE+6));
< 	//			  if (fitItemToClientRect(edge, 1))
< 					{
< 						(*m)->Show();
< 						(*m)->setButton(eButton(UNIT_TYPE_0_BUTTON+stats[(*anarace->getStartCondition())->getRace()][facility[i]].unitType));
< 						(*m)->updateText(*UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+facility[i]+UNIT_NULL_STRING)) + ". . .");
< 						(*m)->adjustRelativeRect(edge);
< 					}
< 					height++;
< 				}
---
>                     if(i >= facilityNumber )
>                     {
>                         (*m)->Hide();
>                         continue;
>                     }
>                     Rect edge = Rect(Point(10+135*(height%2), ((height+1)/2+1) * (FONT_SIZE + 9) /*- getScrollY()*/), Size(120, FONT_SIZE+6));
>     //              if (fitItemToClientRect(edge, 1))
>                     {
>                         (*m)->Show();
>                         (*m)->setButton(eButton(UNIT_TYPE_0_BUTTON+stats[(*anarace->getStartCondition())->getRace()][facility[i]].unitType));
>                         (*m)->updateText(*UI_Object::theme.lookUpString((eString)(UNIT_TYPE_COUNT*anarace->getRace()+facility[i]+UNIT_NULL_STRING)) + ". . .");
>                         (*m)->adjustRelativeRect(edge);
>                     }
>                     height++;
>                 }
140,147c135,142
< 				for(list<MenuEntry*>::iterator m=menuEntries.begin(); m!=menuEntries.end(); ++m)
< 				{
< 					i++;
< 					if(/*(i >= facilityNumber ) ||*/ (stats[(*anarace->getStartCondition())->getRace()][i].unitType != (signed int)(menuLevel)))
< 					{
< 						(*m)->Hide();
< 						continue;
< 					}
---
>                 for(list<MenuEntry*>::iterator m=menuEntries.begin(); m!=menuEntries.end(); ++m)
>                 {
>                     i++;
>                     if(/*(i >= facilityNumber ) ||*/ (stats[(*anarace->getStartCondition())->getRace()][i].unitType != (signed int)(menuLevel)))
>                     {
>                         (*m)->Hide();
>                         continue;
>                     }
160,161c155,156
< 				for(list<MenuEntry*>::iterator m=menuEntries.begin(); m!=menuEntries.end(); ++m)
< 				{
---
>                 for(list<MenuEntry*>::iterator m=menuEntries.begin(); m!=menuEntries.end(); ++m)
>                 {
163c158
< 					if((i > GAS_SCV ) || 
---
>                     if((i > GAS_SCV ) || 
165,170c160,165
< 				   		(stats[(*anarace->getStartCondition())->getRace()][i].facility[1] != facility[menuLevel-1])&&
< 					   (stats[(*anarace->getStartCondition())->getRace()][i].facility[2] != facility[menuLevel-1]))))
< 						{
< 							(*m)->Hide();
< 							continue;
< 						}
---
>         		   		(stats[(*anarace->getStartCondition())->getRace()][i].facility[1] != facility[menuLevel-1])&&
> 			           (stats[(*anarace->getStartCondition())->getRace()][i].facility[2] != facility[menuLevel-1]))))
> 	                    {
>     	                    (*m)->Hide();
>         	                continue;
>             	        }
175c170
< 						(*m)->setButton(eButton(UNIT_TYPE_0_BUTTON+stats[(*anarace->getStartCondition())->getRace()][i].unitType));
---
>                         (*m)->setButton(eButton(UNIT_TYPE_0_BUTTON+stats[(*anarace->getStartCondition())->getRace()][i].unitType));
239d233
< 
247,250d240
< const bool UnitMenu::secondLevel() const
< {
< 	return(menuLevel>1);
< }
diff -r ./unitmenu.hpp /home/claw/work/sc1061/sc/ef/unitmenu.hpp
20,21d19
< 		void assignAnarace(ANARACE* unit_anarace);
< 		const bool secondLevel() const;
Files ./unitmenu.o and /home/claw/work/sc1061/sc/ef/unitmenu.o differ
